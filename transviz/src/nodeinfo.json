[
  {
    "label": "Airtable Agent",
    "name": "airtableAgent",
    "version": 1,
    "type": "AgentExecutor",
    "category": "Agents",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/AirtableAgent/airtable.svg",
    "description": "Agent used to to answer queries on Airtable table",
    "baseClasses": ["AgentExecutor", "BaseChain", "Runnable"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["airtableApi"]
    },
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      {
        "label": "Base Id",
        "name": "baseId",
        "type": "string",
        "placeholder": "app11RobdGoX0YNsC",
        "description": "If your table URL looks like: https://airtable.com/app11RobdGoX0YNsC/tblJdmvbrgizbYICO/viw9UrP77Id0CE4ee, app11RovdGoX0YNsC is the base id"
      },
      {
        "label": "Table Id",
        "name": "tableId",
        "type": "string",
        "placeholder": "tblJdmvbrgizbYICO",
        "description": "If your table URL looks like: https://airtable.com/app11RobdGoX0YNsC/tblJdmvbrgizbYICO/viw9UrP77Id0CE4ee, tblJdmvbrgizbYICO is the table id"
      },
      {
        "label": "Return All",
        "name": "returnAll",
        "type": "boolean",
        "default": true,
        "additionalParams": true,
        "description": "If all results should be returned or only up to a given limit"
      },
      {
        "label": "Limit",
        "name": "limit",
        "type": "number",
        "default": 100,
        "additionalParams": true,
        "description": "Number of results to return"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/AirtableAgent/AirtableAgent.js"
  },
  {
    "label": "AutoGPT",
    "name": "autoGPT",
    "version": 1,
    "type": "AutoGPT",
    "category": "Agents",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/AutoGPT/autogpt.svg",
    "description": "Autonomous agent with chain of thoughts for self-guided task completion",
    "baseClasses": ["AutoGPT"],
    "inputs": [
      {
        "label": "Allowed Tools",
        "name": "tools",
        "type": "Tool",
        "list": true
      },
      { "label": "Chat Model", "name": "model", "type": "BaseChatModel" },
      {
        "label": "Vector Store Retriever",
        "name": "vectorStoreRetriever",
        "type": "BaseRetriever"
      },
      {
        "label": "AutoGPT Name",
        "name": "aiName",
        "type": "string",
        "placeholder": "Tom",
        "optional": true
      },
      {
        "label": "AutoGPT Role",
        "name": "aiRole",
        "type": "string",
        "placeholder": "Assistant",
        "optional": true
      },
      {
        "label": "Maximum Loop",
        "name": "maxLoop",
        "type": "number",
        "default": 5,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/AutoGPT/AutoGPT.js"
  },
  {
    "label": "BabyAGI",
    "name": "babyAGI",
    "version": 1,
    "type": "BabyAGI",
    "category": "Agents",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/BabyAGI/babyagi.svg",
    "description": "Task Driven Autonomous Agent which creates new task and reprioritizes task list based on objective",
    "baseClasses": ["BabyAGI"],
    "inputs": [
      { "label": "Chat Model", "name": "model", "type": "BaseChatModel" },
      { "label": "Vector Store", "name": "vectorStore", "type": "VectorStore" },
      {
        "label": "Task Loop",
        "name": "taskLoop",
        "type": "number",
        "default": 3
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/BabyAGI/BabyAGI.js"
  },
  {
    "label": "CSV Agent",
    "name": "csvAgent",
    "version": 1,
    "type": "AgentExecutor",
    "category": "Agents",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/CSVAgent/CSVagent.svg",
    "description": "Agent used to to answer queries on CSV data",
    "baseClasses": ["AgentExecutor", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Csv File",
        "name": "csvFile",
        "type": "file",
        "fileType": ".csv"
      },
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      {
        "label": "System Message",
        "name": "systemMessagePrompt",
        "type": "string",
        "rows": 4,
        "additionalParams": true,
        "optional": true,
        "placeholder": "I want you to act as a document that I am having a conversation with. Your name is \"AI Assistant\". You will provide me with answers from the given info. If the answer is not included, say exactly \"Hmm, I am not sure.\" and stop after that. Refuse to answer any question not about the info. Never break character."
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/CSVAgent/CSVAgent.js"
  },
  {
    "label": "Conversational Agent",
    "name": "conversationalAgent",
    "version": 2,
    "type": "AgentExecutor",
    "category": "Agents",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/ConversationalAgent/agent.svg",
    "description": "Conversational agent for a chat model. It will utilize chat specific prompts",
    "baseClasses": ["AgentExecutor", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Allowed Tools",
        "name": "tools",
        "type": "Tool",
        "list": true
      },
      { "label": "Language Model", "name": "model", "type": "BaseChatModel" },
      { "label": "Memory", "name": "memory", "type": "BaseChatMemory" },
      {
        "label": "System Message",
        "name": "systemMessage",
        "type": "string",
        "rows": 4,
        "default": "Assistant is a large language model trained by OpenAI.\n\nAssistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate human-like text based on the input it receives, allowing it to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nAssistant is constantly learning and improving, and its capabilities are constantly evolving. It is able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. Additionally, Assistant is able to generate its own text based on the input it receives, allowing it to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, Assistant is a powerful system that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether you need help with a specific question or just want to have a conversation about a particular topic, Assistant is here to assist.",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/ConversationalAgent/ConversationalAgent.js"
  },
  {
    "label": "Conversational Retrieval Agent",
    "name": "conversationalRetrievalAgent",
    "version": 3,
    "type": "AgentExecutor",
    "category": "Agents",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/ConversationalRetrievalAgent/agent.svg",
    "description": "An agent optimized for retrieval during conversation, answering questions based on past dialogue, all using OpenAI's Function Calling",
    "baseClasses": ["AgentExecutor", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Allowed Tools",
        "name": "tools",
        "type": "Tool",
        "list": true
      },
      { "label": "Memory", "name": "memory", "type": "BaseChatMemory" },
      {
        "label": "OpenAI/Azure Chat Model",
        "name": "model",
        "type": "BaseChatModel"
      },
      {
        "label": "System Message",
        "name": "systemMessage",
        "type": "string",
        "default": "Do your best to answer the questions. Feel free to use any tools available to look up relevant information, only if necessary.",
        "rows": 4,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/ConversationalRetrievalAgent/ConversationalRetrievalAgent.js"
  },
  {
    "label": "ReAct Agent for Chat Models",
    "name": "mrklAgentChat",
    "version": 1,
    "type": "AgentExecutor",
    "category": "Agents",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/MRKLAgentChat/agent.svg",
    "description": "Agent that uses the ReAct logic to decide what action to take, optimized to be used with Chat Models",
    "baseClasses": ["AgentExecutor", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Allowed Tools",
        "name": "tools",
        "type": "Tool",
        "list": true
      },
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/MRKLAgentChat/MRKLAgentChat.js"
  },
  {
    "label": "ReAct Agent for LLMs",
    "name": "mrklAgentLLM",
    "version": 1,
    "type": "AgentExecutor",
    "category": "Agents",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/MRKLAgentLLM/agent.svg",
    "description": "Agent that uses the ReAct logic to decide what action to take, optimized to be used with LLMs",
    "baseClasses": ["AgentExecutor", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Allowed Tools",
        "name": "tools",
        "type": "Tool",
        "list": true
      },
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/MRKLAgentLLM/MRKLAgentLLM.js"
  },
  {
    "loadMethods": {},
    "memoryMethods": {},
    "label": "OpenAI Assistant",
    "name": "openAIAssistant",
    "version": 3,
    "type": "OpenAIAssistant",
    "category": "Agents",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/OpenAIAssistant/assistant.svg",
    "description": "An agent that uses OpenAI Assistant API to pick the tool and args to call",
    "baseClasses": ["OpenAIAssistant"],
    "inputs": [
      {
        "label": "Select Assistant",
        "name": "selectedAssistant",
        "type": "asyncOptions",
        "loadMethod": "listAssistants"
      },
      {
        "label": "Allowed Tools",
        "name": "tools",
        "type": "Tool",
        "list": true
      },
      {
        "label": "Input Moderation",
        "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
        "name": "inputModeration",
        "type": "Moderation",
        "optional": true,
        "list": true
      },
      {
        "label": "Disable File Download",
        "name": "disableFileDownload",
        "type": "boolean",
        "description": "Messages can contain text, images, or files. In some cases, you may want to prevent others from downloading the files. Learn more from OpenAI File Annotation <a target=\"_blank\" href=\"https://platform.openai.com/docs/assistants/how-it-works/managing-threads-and-messages\">docs</a>",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/OpenAIAssistant/OpenAIAssistant.js"
  },
  {
    "label": "OpenAI Function Agent",
    "name": "openAIFunctionAgent",
    "version": 3,
    "type": "AgentExecutor",
    "category": "Agents",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/OpenAIFunctionAgent/function.svg",
    "description": "An agent that uses Function Calling to pick the tool and args to call",
    "baseClasses": ["AgentExecutor", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Allowed Tools",
        "name": "tools",
        "type": "Tool",
        "list": true
      },
      { "label": "Memory", "name": "memory", "type": "BaseChatMemory" },
      {
        "label": "OpenAI/Azure Chat Model",
        "name": "model",
        "type": "BaseChatModel"
      },
      {
        "label": "System Message",
        "name": "systemMessage",
        "type": "string",
        "rows": 4,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/agents/OpenAIFunctionAgent/OpenAIFunctionAgent.js"
  },
  {
    "label": "InMemory Cache",
    "name": "inMemoryCache",
    "version": 1,
    "type": "InMemoryCache",
    "description": "Cache LLM response in memory, will be cleared once app restarted",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/InMemoryCache/Memory.svg",
    "category": "Cache",
    "baseClasses": ["InMemoryCache", "BaseCache"],
    "inputs": [],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/InMemoryCache/InMemoryCache.js"
  },
  {
    "label": "InMemory Embedding Cache",
    "name": "inMemoryEmbeddingCache",
    "version": 1,
    "type": "InMemoryEmbeddingCache",
    "description": "Cache generated Embeddings in memory to avoid needing to recompute them.",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/InMemoryCache/Memory.svg",
    "category": "Cache",
    "baseClasses": ["InMemoryEmbeddingCache", "Embeddings"],
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Namespace",
        "name": "namespace",
        "type": "string",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/InMemoryCache/InMemoryEmbeddingCache.js"
  },
  {
    "label": "Momento Cache",
    "name": "momentoCache",
    "version": 1,
    "type": "MomentoCache",
    "description": "Cache LLM response using Momento, a distributed, serverless cache",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/MomentoCache/Momento.svg",
    "category": "Cache",
    "baseClasses": ["MomentoCache", "BaseCache"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "credentialNames": ["momentoCacheApi"]
    },
    "inputs": [],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/MomentoCache/MomentoCache.js"
  },
  {
    "label": "Redis Cache",
    "name": "redisCache",
    "version": 1,
    "type": "RedisCache",
    "description": "Cache LLM response in Redis, useful for sharing cache across multiple processes or servers",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/RedisCache/redis.svg",
    "category": "Cache",
    "baseClasses": ["RedisCache", "BaseCache"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "credentialNames": ["redisCacheApi", "redisCacheUrlApi"]
    },
    "inputs": [
      {
        "label": "Time to Live (ms)",
        "name": "ttl",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/RedisCache/RedisCache.js"
  },
  {
    "label": "Redis Embeddings Cache",
    "name": "redisEmbeddingsCache",
    "version": 1,
    "type": "RedisEmbeddingsCache",
    "description": "Cache generated Embeddings in Redis to avoid needing to recompute them.",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/RedisCache/redis.svg",
    "category": "Cache",
    "baseClasses": ["RedisEmbeddingsCache", "Embeddings"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "credentialNames": ["redisCacheApi", "redisCacheUrlApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Time to Live (ms)",
        "name": "ttl",
        "type": "number",
        "step": 10,
        "default": 3600,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Namespace",
        "name": "namespace",
        "type": "string",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/RedisCache/RedisEmbeddingsCache.js"
  },
  {
    "label": "Upstash Redis Cache",
    "name": "upstashRedisCache",
    "version": 1,
    "type": "UpstashRedisCache",
    "description": "Cache LLM response in Upstash Redis, serverless data for Redis and Kafka",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/UpstashRedisCache/Upstash.svg",
    "category": "Cache",
    "baseClasses": ["UpstashRedisCache", "BaseCache"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "credentialNames": ["upstashRedisApi"]
    },
    "inputs": [],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/cache/UpstashRedisCache/UpstashRedisCache.js"
  },
  {
    "label": "GET API Chain",
    "name": "getApiChain",
    "version": 1,
    "type": "GETApiChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/ApiChain/get.svg",
    "category": "Chains",
    "description": "Chain to run queries against GET API",
    "baseClasses": ["GETApiChain", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      {
        "label": "API Documentation",
        "name": "apiDocs",
        "type": "string",
        "description": "Description of how API works. Please refer to more <a target=\"_blank\" href=\"https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/chains/api/open_meteo_docs.py\">examples</a>",
        "rows": 4
      },
      {
        "label": "Headers",
        "name": "headers",
        "type": "json",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "URL Prompt",
        "name": "urlPrompt",
        "type": "string",
        "description": "Prompt used to tell LLMs how to construct the URL. Must contains {api_docs} and {question}",
        "default": "You are given the below API Documentation:\n{api_docs}\nUsing this documentation, generate the full API url to call for answering the user question.\nYou should build the API url in order to get a response that is as short as possible, while still getting the necessary information to answer the question. Pay attention to deliberately exclude any unnecessary pieces of data in the API call.\n\nQuestion:{question}\nAPI url:",
        "rows": 4,
        "additionalParams": true
      },
      {
        "label": "Answer Prompt",
        "name": "ansPrompt",
        "type": "string",
        "description": "Prompt used to tell LLMs how to return the API response. Must contains {api_response}, {api_url}, and {question}",
        "default": "Given this {api_response} response for {api_url}. use the given response to answer this {question}",
        "rows": 4,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/ApiChain/GETApiChain.js"
  },
  {
    "label": "OpenAPI Chain",
    "name": "openApiChain",
    "version": 1,
    "type": "OpenAPIChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/ApiChain/openapi.svg",
    "category": "Chains",
    "description": "Chain that automatically select and call APIs based only on an OpenAPI spec",
    "baseClasses": ["OpenAPIChain", "BaseChain", "Runnable"],
    "inputs": [
      { "label": "ChatOpenAI Model", "name": "model", "type": "ChatOpenAI" },
      {
        "label": "YAML Link",
        "name": "yamlLink",
        "type": "string",
        "placeholder": "https://api.speak.com/openapi.yaml",
        "description": "If YAML link is provided, uploaded YAML File will be ignored and YAML link will be used instead"
      },
      {
        "label": "YAML File",
        "name": "yamlFile",
        "type": "file",
        "fileType": ".yaml",
        "description": "If YAML link is provided, uploaded YAML File will be ignored and YAML link will be used instead"
      },
      {
        "label": "Headers",
        "name": "headers",
        "type": "json",
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/ApiChain/OpenAPIChain.js"
  },
  {
    "label": "POST API Chain",
    "name": "postApiChain",
    "version": 1,
    "type": "POSTApiChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/ApiChain/post.svg",
    "category": "Chains",
    "description": "Chain to run queries against POST API",
    "baseClasses": ["POSTApiChain", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      {
        "label": "API Documentation",
        "name": "apiDocs",
        "type": "string",
        "description": "Description of how API works. Please refer to more <a target=\"_blank\" href=\"https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/chains/api/open_meteo_docs.py\">examples</a>",
        "rows": 4
      },
      {
        "label": "Headers",
        "name": "headers",
        "type": "json",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "URL Prompt",
        "name": "urlPrompt",
        "type": "string",
        "description": "Prompt used to tell LLMs how to construct the URL. Must contains {api_docs} and {question}",
        "default": "You are given the below API Documentation:\n{api_docs}\nUsing this documentation, generate a json string with two keys: \"url\" and \"data\".\nThe value of \"url\" should be a string, which is the API url to call for answering the user question.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url as a JSON body.\nBe careful to always use double quotes for strings in the json string.\nYou should build the json string in order to get a response that is as short as possible, while still getting the necessary information to answer the question. Pay attention to deliberately exclude any unnecessary pieces of data in the API call.\n\nQuestion:{question}\njson string:",
        "rows": 4,
        "additionalParams": true
      },
      {
        "label": "Answer Prompt",
        "name": "ansPrompt",
        "type": "string",
        "description": "Prompt used to tell LLMs how to return the API response. Must contains {api_response}, {api_url}, and {question}",
        "default": "You are given the below API Documentation:\n{api_docs}\nUsing this documentation, generate a json string with two keys: \"url\" and \"data\".\nThe value of \"url\" should be a string, which is the API url to call for answering the user question.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url as a JSON body.\nBe careful to always use double quotes for strings in the json string.\nYou should build the json string in order to get a response that is as short as possible, while still getting the necessary information to answer the question. Pay attention to deliberately exclude any unnecessary pieces of data in the API call.\n\nQuestion:{question}\njson string: {api_url_body}\n\nHere is the response from the API:\n\n{api_response}\n\nSummarize this response to answer the original question.\n\nSummary:",
        "rows": 4,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/ApiChain/POSTApiChain.js"
  },
  {
    "label": "Conversation Chain",
    "name": "conversationChain",
    "version": 1,
    "type": "ConversationChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/ConversationChain/conv.svg",
    "category": "Chains",
    "description": "Chat models specific conversational chain with memory",
    "baseClasses": ["ConversationChain", "LLMChain", "BaseChain", "Runnable"],
    "inputs": [
      { "label": "Language Model", "name": "model", "type": "BaseChatModel" },
      { "label": "Memory", "name": "memory", "type": "BaseMemory" },
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "description": "Include whole document into the context window, if you get maximum context length error, please use model with higher context window like Claude 100k, or gpt4 32k",
        "optional": true,
        "list": true
      },
      {
        "label": "System Message",
        "name": "systemMessagePrompt",
        "type": "string",
        "rows": 4,
        "additionalParams": true,
        "optional": true,
        "placeholder": "You are a helpful assistant that write codes"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/ConversationChain/ConversationChain.js"
  },
  {
    "label": "Conversational Retrieval QA Chain",
    "name": "conversationalRetrievalQAChain",
    "version": 1,
    "type": "ConversationalRetrievalQAChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/ConversationalRetrievalQAChain/qa.svg",
    "category": "Chains",
    "description": "Document QA - built on RetrievalQAChain to provide a chat history component",
    "baseClasses": ["ConversationalRetrievalQAChain", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      {
        "label": "Vector Store Retriever",
        "name": "vectorStoreRetriever",
        "type": "BaseRetriever"
      },
      {
        "label": "Memory",
        "name": "memory",
        "type": "BaseMemory",
        "optional": true,
        "description": "If left empty, a default BufferMemory will be used"
      },
      {
        "label": "Return Source Documents",
        "name": "returnSourceDocuments",
        "type": "boolean",
        "optional": true
      },
      {
        "label": "System Message",
        "name": "systemMessagePrompt",
        "type": "string",
        "rows": 4,
        "additionalParams": true,
        "optional": true,
        "placeholder": "I want you to act as a document that I am having a conversation with. Your name is \"AI Assistant\". You will provide me with answers from the given info. If the answer is not included, say exactly \"Hmm, I am not sure.\" and stop after that. Refuse to answer any question not about the info. Never break character."
      },
      {
        "label": "Chain Option",
        "name": "chainOption",
        "type": "options",
        "options": [
          {
            "label": "MapReduceDocumentsChain",
            "name": "map_reduce",
            "description": "Suitable for QA tasks over larger documents and can run the preprocessing step in parallel, reducing the running time"
          },
          {
            "label": "RefineDocumentsChain",
            "name": "refine",
            "description": "Suitable for QA tasks over a large number of documents."
          },
          {
            "label": "StuffDocumentsChain",
            "name": "stuff",
            "description": "Suitable for QA tasks over a small number of documents."
          }
        ],
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/ConversationalRetrievalQAChain/ConversationalRetrievalQAChain.js"
  },
  {
    "label": "LLM Chain",
    "name": "llmChain",
    "version": 3,
    "type": "LLMChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/LLMChain/LLM_Chain.svg",
    "category": "Chains",
    "description": "Chain to run queries against LLMs",
    "baseClasses": ["LLMChain", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      { "label": "Prompt", "name": "prompt", "type": "BasePromptTemplate" },
      {
        "label": "Output Parser",
        "name": "outputParser",
        "type": "BaseLLMOutputParser",
        "optional": true
      },
      {
        "label": "Input Moderation",
        "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
        "name": "inputModeration",
        "type": "Moderation",
        "optional": true,
        "list": true
      },
      {
        "label": "Chain Name",
        "name": "chainName",
        "type": "string",
        "placeholder": "Name Your Chain",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "LLM Chain",
        "name": "llmChain",
        "baseClasses": ["LLMChain", "BaseChain", "Runnable"]
      },
      {
        "label": "Output Prediction",
        "name": "outputPrediction",
        "baseClasses": ["string", "json"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/LLMChain/LLMChain.js"
  },
  {
    "label": "Multi Prompt Chain",
    "name": "multiPromptChain",
    "version": 1,
    "type": "MultiPromptChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/MultiPromptChain/prompt.svg",
    "category": "Chains",
    "description": "Chain automatically picks an appropriate prompt from multiple prompt templates",
    "baseClasses": [
      "MultiPromptChain",
      "MultiRouteChain",
      "BaseChain",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      {
        "label": "Prompt Retriever",
        "name": "promptRetriever",
        "type": "PromptRetriever",
        "list": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/MultiPromptChain/MultiPromptChain.js"
  },
  {
    "label": "Multi Retrieval QA Chain",
    "name": "multiRetrievalQAChain",
    "version": 1,
    "type": "MultiRetrievalQAChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/MultiRetrievalQAChain/qa.svg",
    "category": "Chains",
    "description": "QA Chain that automatically picks an appropriate vector store from multiple retrievers",
    "baseClasses": [
      "MultiRetrievalQAChain",
      "MultiRouteChain",
      "BaseChain",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      {
        "label": "Vector Store Retriever",
        "name": "vectorStoreRetriever",
        "type": "VectorStoreRetriever",
        "list": true
      },
      {
        "label": "Return Source Documents",
        "name": "returnSourceDocuments",
        "type": "boolean",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/MultiRetrievalQAChain/MultiRetrievalQAChain.js"
  },
  {
    "label": "Retrieval QA Chain",
    "name": "retrievalQAChain",
    "version": 1,
    "type": "RetrievalQAChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/RetrievalQAChain/qa.svg",
    "category": "Chains",
    "description": "QA chain to answer a question based on the retrieved documents",
    "baseClasses": ["RetrievalQAChain", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      {
        "label": "Vector Store Retriever",
        "name": "vectorStoreRetriever",
        "type": "BaseRetriever"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/RetrievalQAChain/RetrievalQAChain.js"
  },
  {
    "label": "Sql Database Chain",
    "name": "sqlDatabaseChain",
    "version": 4,
    "type": "SqlDatabaseChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/SqlDatabaseChain/sqlchain.svg",
    "category": "Chains",
    "description": "Answer questions over a SQL database",
    "baseClasses": ["SqlDatabaseChain", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      {
        "label": "Database",
        "name": "database",
        "type": "options",
        "options": [
          { "label": "SQLite", "name": "sqlite" },
          { "label": "PostgreSQL", "name": "postgres" },
          { "label": "MSSQL", "name": "mssql" },
          { "label": "MySQL", "name": "mysql" }
        ],
        "default": "sqlite"
      },
      {
        "label": "Connection string or file path (sqlite only)",
        "name": "url",
        "type": "string",
        "placeholder": "1270.0.0.1:5432/chinook"
      },
      {
        "label": "Include Tables",
        "name": "includesTables",
        "type": "string",
        "description": "Tables to include for queries, seperated by comma. Can only use Include Tables or Ignore Tables",
        "placeholder": "table1, table2",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Ignore Tables",
        "name": "ignoreTables",
        "type": "string",
        "description": "Tables to ignore for queries, seperated by comma. Can only use Ignore Tables or Include Tables",
        "placeholder": "table1, table2",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Sample table's rows info",
        "name": "sampleRowsInTableInfo",
        "type": "number",
        "description": "Number of sample row for tables to load for info.",
        "placeholder": "3",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top Keys",
        "name": "topK",
        "type": "number",
        "description": "If you are querying for several rows of a table you can select the maximum number of results you want to get by using the \"top_k\" parameter (default is 10). This is useful for avoiding query results that exceed the prompt max length or consume tokens unnecessarily.",
        "placeholder": "10",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Custom Prompt",
        "name": "customPrompt",
        "type": "string",
        "description": "You can provide custom prompt to the chain. This will override the existing default prompt used. See <a target=\"_blank\" href=\"https://python.langchain.com/docs/integrations/tools/sqlite#customize-prompt\">guide</a>",
        "warning": "Prompt must include 3 input variables: {input}, {dialect}, {table_info}. You can refer to official guide from description above",
        "rows": 4,
        "placeholder": "Given an input question, first create a syntactically correct {dialect} query to run, then look at the results of the query and return the answer. Unless the user specifies in his question a specific number of examples he wishes to obtain, always limit your query to at most {top_k} results. You can order the results by a relevant column to return the most interesting examples in the database.\n\nNever query for all the columns from a specific table, only ask for a the few relevant columns given the question.\n\nPay attention to use only the column names that you can see in the schema description. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\n\nUse the following format:\n\nQuestion: \"Question here\"\nSQLQuery: \"SQL Query to run\"\nSQLResult: \"Result of the SQLQuery\"\nAnswer: \"Final answer here\"\n\nOnly use the tables listed below.\n\n{table_info}\n\nQuestion: {input}f-string",
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/SqlDatabaseChain/SqlDatabaseChain.js"
  },
  {
    "label": "Vectara QA Chain",
    "name": "vectaraQAChain",
    "version": 1,
    "type": "VectaraQAChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/VectaraChain/vectara.png",
    "category": "Chains",
    "description": "QA chain for Vectara",
    "baseClasses": ["VectaraQAChain", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Vectara Store",
        "name": "vectaraStore",
        "type": "VectorStore"
      },
      {
        "label": "Summarizer Prompt Name",
        "name": "summarizerPromptName",
        "description": "Summarize the results fetched from Vectara. Read <a target=\"_blank\" href=\"https://docs.vectara.com/docs/learn/grounded-generation/select-a-summarizer\">more</a>",
        "type": "options",
        "options": [
          {
            "label": "vectara-summary-ext-v1.2.0 (gpt-3.5-turbo)",
            "name": "vectara-summary-ext-v1.2.0"
          },
          {
            "label": "vectara-experimental-summary-ext-2023-10-23-small (gpt-3.5-turbo)",
            "name": "vectara-experimental-summary-ext-2023-10-23-small",
            "description": "In beta, available to both Growth and Scale Vectara users"
          },
          {
            "label": "vectara-summary-ext-v1.3.0 (gpt-4.0)",
            "name": "vectara-summary-ext-v1.3.0",
            "description": "Only available to paying Scale Vectara users"
          },
          {
            "label": "vectara-experimental-summary-ext-2023-10-23-med (gpt-4.0)",
            "name": "vectara-experimental-summary-ext-2023-10-23-med",
            "description": "In beta, only available to paying Scale Vectara users"
          }
        ],
        "default": "vectara-summary-ext-v1.2.0"
      },
      {
        "label": "Response Language",
        "name": "responseLang",
        "description": "Return the response in specific language. If not selected, Vectara will automatically detects the language. Read <a target=\"_blank\" href=\"https://docs.vectara.com/docs/learn/grounded-generation/grounded-generation-response-languages\">more</a>",
        "type": "options",
        "options": [
          { "label": "English", "name": "eng" },
          { "label": "German", "name": "deu" },
          { "label": "French", "name": "fra" },
          { "label": "Chinese", "name": "zho" },
          { "label": "Korean", "name": "kor" },
          { "label": "Arabic", "name": "ara" },
          { "label": "Russian", "name": "rus" },
          { "label": "Thai", "name": "tha" },
          { "label": "Dutch", "name": "nld" },
          { "label": "Italian", "name": "ita" },
          { "label": "Portuguese", "name": "por" },
          { "label": "Spanish", "name": "spa" },
          { "label": "Japanese", "name": "jpn" },
          { "label": "Polish", "name": "pol" },
          { "label": "Turkish", "name": "tur" },
          { "label": "Vietnamese", "name": "vie" },
          { "label": "Indonesian", "name": "ind" },
          { "label": "Czech", "name": "ces" },
          { "label": "Ukrainian", "name": "ukr" },
          { "label": "Greek", "name": "ell" },
          { "label": "Hebrew", "name": "heb" },
          { "label": "Farsi/Persian", "name": "fas" },
          { "label": "Hindi", "name": "hin" },
          { "label": "Urdu", "name": "urd" },
          { "label": "Swedish", "name": "swe" },
          { "label": "Bengali", "name": "ben" },
          { "label": "Malay", "name": "msa" },
          { "label": "Romanian", "name": "ron" }
        ],
        "optional": true,
        "default": "eng"
      },
      {
        "label": "Max Summarized Results",
        "name": "maxSummarizedResults",
        "description": "Maximum results used to build the summarized response",
        "type": "number",
        "default": 7
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/VectaraChain/VectaraChain.js"
  },
  {
    "label": "VectorDB QA Chain",
    "name": "vectorDBQAChain",
    "version": 1,
    "type": "VectorDBQAChain",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/VectorDBQAChain/vectordb.svg",
    "category": "Chains",
    "description": "QA chain for vector databases",
    "baseClasses": ["VectorDBQAChain", "BaseChain", "Runnable"],
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      { "label": "Vector Store", "name": "vectorStore", "type": "VectorStore" }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chains/VectorDBQAChain/VectorDBQAChain.js"
  },
  {
    "label": "AWS ChatBedrock",
    "name": "awsChatBedrock",
    "version": 3,
    "type": "AWSChatBedrock",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/AWSBedrock/aws.svg",
    "category": "Chat Models",
    "description": "Wrapper around AWS Bedrock large language models that use the Chat endpoint",
    "baseClasses": [
      "AWSChatBedrock",
      "BedrockChat",
      "SimpleChatModel",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "AWS Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["awsApi"],
      "optional": true
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Region",
        "name": "region",
        "type": "options",
        "options": [
          { "label": "af-south-1", "name": "af-south-1" },
          { "label": "ap-east-1", "name": "ap-east-1" },
          { "label": "ap-northeast-1", "name": "ap-northeast-1" },
          { "label": "ap-northeast-2", "name": "ap-northeast-2" },
          { "label": "ap-northeast-3", "name": "ap-northeast-3" },
          { "label": "ap-south-1", "name": "ap-south-1" },
          { "label": "ap-south-2", "name": "ap-south-2" },
          { "label": "ap-southeast-1", "name": "ap-southeast-1" },
          { "label": "ap-southeast-2", "name": "ap-southeast-2" },
          { "label": "ap-southeast-3", "name": "ap-southeast-3" },
          { "label": "ap-southeast-4", "name": "ap-southeast-4" },
          { "label": "ap-southeast-5", "name": "ap-southeast-5" },
          { "label": "ap-southeast-6", "name": "ap-southeast-6" },
          { "label": "ca-central-1", "name": "ca-central-1" },
          { "label": "ca-west-1", "name": "ca-west-1" },
          { "label": "cn-north-1", "name": "cn-north-1" },
          { "label": "cn-northwest-1", "name": "cn-northwest-1" },
          { "label": "eu-central-1", "name": "eu-central-1" },
          { "label": "eu-central-2", "name": "eu-central-2" },
          { "label": "eu-north-1", "name": "eu-north-1" },
          { "label": "eu-south-1", "name": "eu-south-1" },
          { "label": "eu-south-2", "name": "eu-south-2" },
          { "label": "eu-west-1", "name": "eu-west-1" },
          { "label": "eu-west-2", "name": "eu-west-2" },
          { "label": "eu-west-3", "name": "eu-west-3" },
          { "label": "il-central-1", "name": "il-central-1" },
          { "label": "me-central-1", "name": "me-central-1" },
          { "label": "me-south-1", "name": "me-south-1" },
          { "label": "sa-east-1", "name": "sa-east-1" },
          { "label": "us-east-1", "name": "us-east-1" },
          { "label": "us-east-2", "name": "us-east-2" },
          { "label": "us-gov-east-1", "name": "us-gov-east-1" },
          { "label": "us-gov-west-1", "name": "us-gov-west-1" },
          { "label": "us-west-1", "name": "us-west-1" },
          { "label": "us-west-2", "name": "us-west-2" }
        ],
        "default": "us-east-1"
      },
      {
        "label": "Model Name",
        "name": "model",
        "type": "options",
        "options": [
          {
            "label": "anthropic.claude-instant-v1",
            "name": "anthropic.claude-instant-v1"
          },
          { "label": "anthropic.claude-v1", "name": "anthropic.claude-v1" },
          { "label": "anthropic.claude-v2", "name": "anthropic.claude-v2" },
          {
            "label": "meta.llama2-13b-chat-v1",
            "name": "meta.llama2-13b-chat-v1"
          }
        ],
        "default": "anthropic.claude-v2"
      },
      {
        "label": "Custom Model Name",
        "name": "customModel",
        "description": "If provided, will override model selected from Model Name option",
        "type": "string",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "description": "Temperature parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true,
        "default": 0.7
      },
      {
        "label": "Max Tokens to Sample",
        "name": "max_tokens_to_sample",
        "type": "number",
        "step": 10,
        "description": "Max Tokens parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true,
        "default": 200
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/AWSBedrock/AWSChatBedrock.js"
  },
  {
    "label": "Azure ChatOpenAI",
    "name": "azureChatOpenAI",
    "version": 2,
    "type": "AzureChatOpenAI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/AzureChatOpenAI/Azure.svg",
    "category": "Chat Models",
    "description": "Wrapper around Azure OpenAI large language models that use the Chat endpoint",
    "baseClasses": [
      "AzureChatOpenAI",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["azureOpenAIApi"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          { "label": "gpt-4", "name": "gpt-4" },
          { "label": "gpt-4-32k", "name": "gpt-4-32k" },
          { "label": "gpt-35-turbo", "name": "gpt-35-turbo" },
          { "label": "gpt-35-turbo-16k", "name": "gpt-35-turbo-16k" }
        ],
        "default": "gpt-35-turbo",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Frequency Penalty",
        "name": "frequencyPenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Presence Penalty",
        "name": "presencePenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/AzureChatOpenAI/AzureChatOpenAI.js"
  },
  {
    "label": "NIBittensorChat",
    "name": "NIBittensorChatModel",
    "version": 2,
    "type": "BittensorChat",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/Bittensor/NIBittensor.svg",
    "category": "Chat Models",
    "description": "Wrapper around Bittensor subnet 1 large language models",
    "baseClasses": [
      "BittensorChat",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "System prompt",
        "name": "system_prompt",
        "type": "string",
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/Bittensor/Bittensor.js"
  },
  {
    "label": "ChatAnthropic",
    "name": "chatAnthropic",
    "version": 3,
    "type": "ChatAnthropic",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatAnthropic/Anthropic.svg",
    "category": "Chat Models",
    "description": "Wrapper around ChatAnthropic large language models that use the Chat endpoint",
    "baseClasses": [
      "ChatAnthropic",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["anthropicApi"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          {
            "label": "claude-2",
            "name": "claude-2",
            "description": "Claude 2 latest major version, automatically get updates to the model as they are released"
          },
          {
            "label": "claude-2.1",
            "name": "claude-2.1",
            "description": "Claude 2 latest full version"
          },
          {
            "label": "claude-instant-1",
            "name": "claude-instant-1",
            "description": "Claude Instant latest major version, automatically get updates to the model as they are released"
          },
          { "label": "claude-v1", "name": "claude-v1" },
          { "label": "claude-v1-100k", "name": "claude-v1-100k" },
          { "label": "claude-v1.0", "name": "claude-v1.0" },
          { "label": "claude-v1.2", "name": "claude-v1.2" },
          { "label": "claude-v1.3", "name": "claude-v1.3" },
          { "label": "claude-v1.3-100k", "name": "claude-v1.3-100k" },
          { "label": "claude-instant-v1", "name": "claude-instant-v1" },
          {
            "label": "claude-instant-v1-100k",
            "name": "claude-instant-v1-100k"
          },
          { "label": "claude-instant-v1.0", "name": "claude-instant-v1.0" },
          { "label": "claude-instant-v1.1", "name": "claude-instant-v1.1" },
          {
            "label": "claude-instant-v1.1-100k",
            "name": "claude-instant-v1.1-100k"
          }
        ],
        "default": "claude-2",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokensToSample",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top P",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatAnthropic/ChatAnthropic.js"
  },
  {
    "label": "ChatGoogleGenerativeAI",
    "name": "chatGoogleGenerativeAI",
    "version": 1,
    "type": "ChatGoogleGenerativeAI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatGoogleGenerativeAI/GoogleGemini.svg",
    "category": "Chat Models",
    "description": "Wrapper around Google Gemini large language models that use the Chat endpoint",
    "baseClasses": [
      "ChatGoogleGenerativeAI",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["googleGenerativeAI"],
      "optional": false,
      "description": "Google Generative AI credential."
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [{ "label": "gemini-pro", "name": "gemini-pro" }],
        "default": "gemini-pro"
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Max Output Tokens",
        "name": "maxOutputTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatGoogleGenerativeAI/ChatGoogleGenerativeAI.js"
  },
  {
    "label": "ChatGooglePaLM",
    "name": "chatGooglePaLM",
    "version": 2,
    "type": "ChatGooglePaLM",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatGooglePaLM/GooglePaLM.svg",
    "category": "Chat Models",
    "description": "Wrapper around Google MakerSuite PaLM large language models using the Chat endpoint",
    "baseClasses": [
      "ChatGooglePaLM",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["googleMakerSuite"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          { "label": "models/chat-bison-001", "name": "models/chat-bison-001" }
        ],
        "default": "models/chat-bison-001",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.7,
        "optional": true,
        "description": "Controls the randomness of the output.\nValues can range from [0.0,1.0], inclusive. A value closer to 1.0 will produce responses that are more varied and creative, while a value closer to 0.0 will typically result in more straightforward responses from the model."
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true,
        "description": "Top-p changes how the model selects tokens for output.\nTokens are selected from most probable to least until the sum of their probabilities equals the top-p value.\nFor example, if tokens A, B, and C have a probability of .3, .2, and .1 and the top-p value is .5, then the model will select either A or B as the next token (using temperature)."
      },
      {
        "label": "Top-k",
        "name": "topK",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true,
        "description": "Top-k changes how the model selects tokens for output.\nA top-k of 1 means the selected token is the most probable among all tokens in the model vocabulary (also called greedy decoding), while a top-k of 3 means that the next token is selected from among the 3 most probable tokens (using temperature)."
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatGooglePaLM/ChatGooglePaLM.js"
  },
  {
    "label": "ChatGoogleVertexAI",
    "name": "chatGoogleVertexAI",
    "version": 2,
    "type": "ChatGoogleVertexAI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatGoogleVertexAI/GoogleVertex.svg",
    "category": "Chat Models",
    "description": "Wrapper around VertexAI large language models that use the Chat endpoint",
    "baseClasses": [
      "ChatGoogleVertexAI",
      "BaseChatGoogleVertexAI",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["googleVertexAuth"],
      "optional": true,
      "description": "Google Vertex AI credential. If you are using a GCP service like Cloud Run, or if you have installed default credentials on your local machine, you do not need to set this credential."
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          { "label": "chat-bison", "name": "chat-bison" },
          { "label": "codechat-bison", "name": "codechat-bison" },
          { "label": "chat-bison-32k", "name": "chat-bison-32k" },
          { "label": "codechat-bison-32k", "name": "codechat-bison-32k" }
        ],
        "default": "chat-bison",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Max Output Tokens",
        "name": "maxOutputTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatGoogleVertexAI/ChatGoogleVertexAI.js"
  },
  {
    "label": "ChatHuggingFace",
    "name": "chatHuggingFace",
    "version": 2,
    "type": "ChatHuggingFace",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatHuggingFace/HuggingFace.svg",
    "category": "Chat Models",
    "description": "Wrapper around HuggingFace large language models",
    "baseClasses": [
      "ChatHuggingFace",
      "BaseChatModel",
      "LLM",
      "BaseLLM",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["huggingFaceApi"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model",
        "name": "model",
        "type": "string",
        "description": "If using own inference endpoint, leave this blank",
        "placeholder": "gpt2",
        "optional": true
      },
      {
        "label": "Endpoint",
        "name": "endpoint",
        "type": "string",
        "placeholder": "https://xyz.eu-west-1.aws.endpoints.huggingface.cloud/gpt2",
        "description": "Using your own inference endpoint",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "description": "Temperature parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "description": "Max Tokens parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "description": "Top Probability parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "hfTopK",
        "type": "number",
        "step": 0.1,
        "description": "Top K parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Frequency Penalty",
        "name": "frequencyPenalty",
        "type": "number",
        "step": 0.1,
        "description": "Frequency Penalty parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatHuggingFace/ChatHuggingFace.js"
  },
  {
    "label": "ChatLocalAI",
    "name": "chatLocalAI",
    "version": 2,
    "type": "ChatLocalAI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatLocalAI/localai.png",
    "category": "Chat Models",
    "description": "Use local LLMs like llama.cpp, gpt4all using LocalAI",
    "baseClasses": [
      "ChatLocalAI",
      "BaseChatModel",
      "LLM",
      "BaseLLM",
      "BaseLanguageModel",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Base Path",
        "name": "basePath",
        "type": "string",
        "placeholder": "http://localhost:8080/v1"
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "string",
        "placeholder": "gpt4all-lora-quantized.bin"
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatLocalAI/ChatLocalAI.js"
  },
  {
    "label": "ChatMistralAI",
    "name": "chatMistralAI",
    "version": 1,
    "type": "ChatMistralAI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatMistral/MistralAI.svg",
    "category": "Chat Models",
    "description": "Wrapper around Mistral large language models that use the Chat endpoint",
    "baseClasses": [
      "ChatMistralAI",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["mistralAIApi"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          { "label": "mistral-tiny", "name": "mistral-tiny" },
          { "label": "mistral-small", "name": "mistral-small" },
          { "label": "mistral-medium", "name": "mistral-medium" }
        ],
        "default": "mistral-tiny"
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "description": "What sampling temperature to use, between 0.0 and 1.0. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Max Output Tokens",
        "name": "maxOutputTokens",
        "type": "number",
        "description": "The maximum number of tokens to generate in the completion.",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "description": "Nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Random Seed",
        "name": "randomSeed",
        "type": "number",
        "description": "The seed to use for random sampling. If set, different calls will generate deterministic results.",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Safe Mode",
        "name": "safeMode",
        "type": "boolean",
        "description": "Whether to inject a safety prompt before all conversations.",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Override Endpoint",
        "name": "overrideEndpoint",
        "type": "string",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatMistral/ChatMistral.js"
  },
  {
    "label": "ChatOllama",
    "name": "chatOllama",
    "version": 2,
    "type": "ChatOllama",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatOllama/Ollama.svg",
    "category": "Chat Models",
    "description": "Chat completion using open-source LLM on Ollama",
    "baseClasses": [
      "ChatOllama",
      "SimpleChatModel",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Base URL",
        "name": "baseUrl",
        "type": "string",
        "default": "http://localhost:11434"
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "string",
        "placeholder": "llama2"
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "description": "The temperature of the model. Increasing the temperature will make the model answer more creatively. (Default: 0.8). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Top P",
        "name": "topP",
        "type": "number",
        "description": "Works together with top-k. A higher value (e.g., 0.95) will lead to more diverse text, while a lower value (e.g., 0.5) will generate more focused and conservative text. (Default: 0.9). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "type": "number",
        "description": "Reduces the probability of generating nonsense. A higher value (e.g. 100) will give more diverse answers, while a lower value (e.g. 10) will be more conservative. (Default: 40). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Mirostat",
        "name": "mirostat",
        "type": "number",
        "description": "Enable Mirostat sampling for controlling perplexity. (default: 0, 0 = disabled, 1 = Mirostat, 2 = Mirostat 2.0). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Mirostat ETA",
        "name": "mirostatEta",
        "type": "number",
        "description": "Influences how quickly the algorithm responds to feedback from the generated text. A lower learning rate will result in slower adjustments, while a higher learning rate will make the algorithm more responsive. (Default: 0.1) Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Mirostat TAU",
        "name": "mirostatTau",
        "type": "number",
        "description": "Controls the balance between coherence and diversity of the output. A lower value will result in more focused and coherent text. (Default: 5.0) Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Context Window Size",
        "name": "numCtx",
        "type": "number",
        "description": "Sets the size of the context window used to generate the next token. (Default: 2048) Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Number of GQA groups",
        "name": "numGqa",
        "type": "number",
        "description": "The number of GQA groups in the transformer layer. Required for some models, for example it is 8 for llama2:70b. Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Number of GPU",
        "name": "numGpu",
        "type": "number",
        "description": "The number of layers to send to the GPU(s). On macOS it defaults to 1 to enable metal support, 0 to disable. Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Number of Thread",
        "name": "numThread",
        "type": "number",
        "description": "Sets the number of threads to use during computation. By default, Ollama will detect this for optimal performance. It is recommended to set this value to the number of physical CPU cores your system has (as opposed to the logical number of cores). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Repeat Last N",
        "name": "repeatLastN",
        "type": "number",
        "description": "Sets how far back for the model to look back to prevent repetition. (Default: 64, 0 = disabled, -1 = num_ctx). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Repeat Penalty",
        "name": "repeatPenalty",
        "type": "number",
        "description": "Sets how strongly to penalize repetitions. A higher value (e.g., 1.5) will penalize repetitions more strongly, while a lower value (e.g., 0.9) will be more lenient. (Default: 1.1). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Stop Sequence",
        "name": "stop",
        "type": "string",
        "rows": 4,
        "placeholder": "AI assistant:",
        "description": "Sets the stop sequences to use. Use comma to seperate different sequences. Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Tail Free Sampling",
        "name": "tfsZ",
        "type": "number",
        "description": "Tail free sampling is used to reduce the impact of less probable tokens from the output. A higher value (e.g., 2.0) will reduce the impact more, while a value of 1.0 disables this setting. (Default: 1). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatOllama/ChatOllama.js"
  },
  {
    "label": "ChatOpenAI",
    "name": "chatOpenAI",
    "version": 2,
    "type": "ChatOpenAI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatOpenAI/openai.svg",
    "category": "Chat Models",
    "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
    "baseClasses": [
      "ChatOpenAI",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["openAIApi"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          { "label": "gpt-4", "name": "gpt-4" },
          { "label": "gpt-4-1106-preview", "name": "gpt-4-1106-preview" },
          { "label": "gpt-4-vision-preview", "name": "gpt-4-vision-preview" },
          { "label": "gpt-4-0613", "name": "gpt-4-0613" },
          { "label": "gpt-4-32k", "name": "gpt-4-32k" },
          { "label": "gpt-4-32k-0613", "name": "gpt-4-32k-0613" },
          { "label": "gpt-3.5-turbo", "name": "gpt-3.5-turbo" },
          { "label": "gpt-3.5-turbo-1106", "name": "gpt-3.5-turbo-1106" },
          { "label": "gpt-3.5-turbo-0613", "name": "gpt-3.5-turbo-0613" },
          { "label": "gpt-3.5-turbo-16k", "name": "gpt-3.5-turbo-16k" },
          {
            "label": "gpt-3.5-turbo-16k-0613",
            "name": "gpt-3.5-turbo-16k-0613"
          }
        ],
        "default": "gpt-3.5-turbo",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Frequency Penalty",
        "name": "frequencyPenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Presence Penalty",
        "name": "presencePenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "BasePath",
        "name": "basepath",
        "type": "string",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "BaseOptions",
        "name": "baseOptions",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatOpenAI/ChatOpenAI.js"
  },
  {
    "label": "ChatOpenAI Custom",
    "name": "chatOpenAICustom",
    "version": 2,
    "type": "ChatOpenAI-Custom",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatOpenAICustom/openai.svg",
    "category": "Chat Models",
    "description": "Custom/FineTuned model using OpenAI Chat compatible API",
    "baseClasses": [
      "ChatOpenAI-Custom",
      "BaseChatModel",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["openAIApi"],
      "optional": true
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "string",
        "placeholder": "ft:gpt-3.5-turbo:my-org:custom_suffix:id"
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Frequency Penalty",
        "name": "frequencyPenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Presence Penalty",
        "name": "presencePenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "BasePath",
        "name": "basepath",
        "type": "string",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "BaseOptions",
        "name": "baseOptions",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatOpenAICustom/ChatOpenAICustom.js"
  },
  {
    "label": "API Loader",
    "name": "apiLoader",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/API/api.svg",
    "category": "Document Loaders",
    "description": "Load data from an API",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Method",
        "name": "method",
        "type": "options",
        "options": [
          { "label": "GET", "name": "GET" },
          { "label": "POST", "name": "POST" }
        ]
      },
      { "label": "URL", "name": "url", "type": "string" },
      {
        "label": "Headers",
        "name": "headers",
        "type": "json",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Body",
        "name": "body",
        "type": "json",
        "description": "JSON body for the POST request. If not specified, agent will try to figure out itself from AIPlugin if provided",
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/API/APILoader.js"
  },
  {
    "label": "Airtable",
    "name": "airtable",
    "version": 2,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Airtable/airtable.svg",
    "category": "Document Loaders",
    "description": "Load data from Airtable table",
    "baseClasses": ["Document"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["airtableApi"]
    },
    "inputs": [
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Base Id",
        "name": "baseId",
        "type": "string",
        "placeholder": "app11RobdGoX0YNsC",
        "description": "If your table URL looks like: https://airtable.com/app11RobdGoX0YNsC/tblJdmvbrgizbYICO/viw9UrP77Id0CE4ee, app11RovdGoX0YNsC is the base id"
      },
      {
        "label": "Table Id",
        "name": "tableId",
        "type": "string",
        "placeholder": "tblJdmvbrgizbYICO",
        "description": "If your table URL looks like: https://airtable.com/app11RobdGoX0YNsC/tblJdmvbrgizbYICO/viw9UrP77Id0CE4ee, tblJdmvbrgizbYICO is the table id"
      },
      {
        "label": "View Id",
        "name": "viewId",
        "type": "string",
        "placeholder": "viw9UrP77Id0CE4ee",
        "description": "If your view URL looks like: https://airtable.com/app11RobdGoX0YNsC/tblJdmvbrgizbYICO/viw9UrP77Id0CE4ee, viw9UrP77Id0CE4ee is the view id",
        "optional": true
      },
      {
        "label": "Return All",
        "name": "returnAll",
        "type": "boolean",
        "default": true,
        "additionalParams": true,
        "description": "If all results should be returned or only up to a given limit"
      },
      {
        "label": "Limit",
        "name": "limit",
        "type": "number",
        "default": 100,
        "additionalParams": true,
        "description": "Number of results to return"
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Airtable/Airtable.js"
  },
  {
    "label": "Apify Website Content Crawler",
    "name": "apifyWebsiteContentCrawler",
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/ApifyWebsiteContentCrawler/apify-symbol-transparent.svg",
    "version": 2,
    "category": "Document Loaders",
    "description": "Load data from Apify Website Content Crawler",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Start URLs",
        "name": "urls",
        "type": "string",
        "description": "One or more URLs of pages where the crawler will start, separated by commas.",
        "placeholder": "https://js.langchain.com/docs/"
      },
      {
        "label": "Crawler type",
        "type": "options",
        "name": "crawlerType",
        "options": [
          {
            "label": "Headless web browser (Chrome+Playwright)",
            "name": "playwright:chrome"
          },
          {
            "label": "Stealthy web browser (Firefox+Playwright)",
            "name": "playwright:firefox"
          },
          { "label": "Raw HTTP client (Cheerio)", "name": "cheerio" },
          {
            "label": "Raw HTTP client with JavaScript execution (JSDOM) [experimental]",
            "name": "jsdom"
          }
        ],
        "description": "Select the crawling engine, see <a target=\"_blank\" href=\"https://apify.com/apify/website-content-crawler#crawling\">documentation</a> for additional information.",
        "default": "playwright:firefox"
      },
      {
        "label": "Max crawling depth",
        "name": "maxCrawlDepth",
        "type": "number",
        "optional": true,
        "default": 1,
        "additionalParams": true
      },
      {
        "label": "Max crawl pages",
        "name": "maxCrawlPages",
        "type": "number",
        "optional": true,
        "default": 3,
        "additionalParams": true
      },
      {
        "label": "Additional input",
        "name": "additionalInput",
        "type": "json",
        "default": "{}",
        "description": "For additional input options for the crawler see <a target=\"_blank\" href=\"https://apify.com/apify/website-content-crawler/input-schema\">documentation</a>.",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "credential": {
      "label": "Connect Apify API",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["apifyApi"]
    },
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/ApifyWebsiteContentCrawler/ApifyWebsiteContentCrawler.js"
  },
  {
    "label": "Cheerio Web Scraper",
    "name": "cheerioWebScraper",
    "version": 1.1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Cheerio/cheerio.svg",
    "category": "Document Loaders",
    "description": "Load data from webpages",
    "baseClasses": ["Document"],
    "inputs": [
      { "label": "URL", "name": "url", "type": "string" },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Get Relative Links Method",
        "name": "relativeLinksMethod",
        "type": "options",
        "description": "Select a method to retrieve relative links",
        "options": [
          {
            "label": "Web Crawl",
            "name": "webCrawl",
            "description": "Crawl relative links from HTML URL"
          },
          {
            "label": "Scrape XML Sitemap",
            "name": "scrapeXMLSitemap",
            "description": "Scrape relative links from XML sitemap URL"
          }
        ],
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Get Relative Links Limit",
        "name": "limit",
        "type": "number",
        "optional": true,
        "additionalParams": true,
        "description": "Only used when \"Get Relative Links Method\" is selected. Set 0 to retrieve all relative links, default limit is 10.",
        "warning": "Retrieving all links might take long time, and all links will be upserted again if the flow's state changed (eg: different URL, chunk size, etc)"
      },
      {
        "label": "Selector (CSS)",
        "name": "selector",
        "type": "string",
        "description": "Specify a CSS selector to select the content to be extracted",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Cheerio/Cheerio.js"
  },
  {
    "label": "Confluence",
    "name": "confluence",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Confluence/confluence.svg",
    "category": "Document Loaders",
    "description": "Load data from a Confluence Document",
    "baseClasses": ["Document"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["confluenceApi"]
    },
    "inputs": [
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Base URL",
        "name": "baseUrl",
        "type": "string",
        "placeholder": "https://example.atlassian.net/wiki"
      },
      {
        "label": "Space Key",
        "name": "spaceKey",
        "type": "string",
        "placeholder": "~EXAMPLE362906de5d343d49dcdbae5dEXAMPLE",
        "description": "Refer to <a target=\"_blank\" href=\"https://community.atlassian.com/t5/Confluence-questions/How-to-find-the-key-for-a-space/qaq-p/864760\">official guide</a> on how to get Confluence Space Key"
      },
      {
        "label": "Limit",
        "name": "limit",
        "type": "number",
        "default": 0,
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Confluence/Confluence.js"
  },
  {
    "label": "Csv File",
    "name": "csvFile",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Csv/csv.svg",
    "category": "Document Loaders",
    "description": "Load data from CSV files",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Csv File",
        "name": "csvFile",
        "type": "file",
        "fileType": ".csv"
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Single Column Extraction",
        "name": "columnName",
        "type": "string",
        "description": "Extracting a single column",
        "placeholder": "Enter column name",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Csv/Csv.js"
  },
  {
    "label": "Docx File",
    "name": "docxFile",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Docx/docx.svg",
    "category": "Document Loaders",
    "description": "Load data from DOCX files",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Docx File",
        "name": "docxFile",
        "type": "file",
        "fileType": ".docx"
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Docx/Docx.js"
  },
  {
    "label": "Figma",
    "name": "figma",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Figma/figma.svg",
    "category": "Document Loaders",
    "description": "Load data from a Figma file",
    "baseClasses": ["Document"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["figmaApi"]
    },
    "inputs": [
      {
        "label": "File Key",
        "name": "fileKey",
        "type": "string",
        "placeholder": "key",
        "description": "The file key can be read from any Figma file URL: https://www.figma.com/file/:key/:title. For example, in https://www.figma.com/file/12345/Website, the file key is 12345"
      },
      {
        "label": "Node IDs",
        "name": "nodeIds",
        "type": "string",
        "placeholder": "0, 1, 2",
        "description": "A list of Node IDs, seperated by comma. Refer to <a target=\"_blank\" href=\"https://www.figma.com/community/plugin/758276196886757462/Node-Inspector\">official guide</a> on how to get Node IDs"
      },
      {
        "label": "Recursive",
        "name": "recursive",
        "type": "boolean",
        "optional": true
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Figma/Figma.js"
  },
  {
    "label": "Folder with Files",
    "name": "folderFiles",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Folder/folder.svg",
    "category": "Document Loaders",
    "description": "Load data from folder with multiple files",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Folder Path",
        "name": "folderPath",
        "type": "string",
        "placeholder": ""
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Folder/Folder.js"
  },
  {
    "label": "GitBook",
    "name": "gitbook",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Gitbook/gitbook.svg",
    "category": "Document Loaders",
    "description": "Load data from GitBook",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Web Path",
        "name": "webPath",
        "type": "string",
        "placeholder": "https://docs.gitbook.com/product-tour/navigation",
        "description": "If want to load all paths from the GitBook provide only root path e.g.https://docs.gitbook.com/ "
      },
      {
        "label": "Should Load All Paths",
        "name": "shouldLoadAllPaths",
        "type": "boolean",
        "description": "Load from all paths in a given GitBook",
        "optional": true
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Gitbook/Gitbook.js"
  },
  {
    "label": "Github",
    "name": "github",
    "version": 2,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Github/github.svg",
    "category": "Document Loaders",
    "description": "Load data from a GitHub repository",
    "baseClasses": ["Document"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed when accessing private repo",
      "optional": true,
      "credentialNames": ["githubApi"]
    },
    "inputs": [
      {
        "label": "Repo Link",
        "name": "repoLink",
        "type": "string",
        "placeholder": "https://github.com/FlowiseAI/Flowise"
      },
      {
        "label": "Branch",
        "name": "branch",
        "type": "string",
        "default": "main"
      },
      {
        "label": "Recursive",
        "name": "recursive",
        "type": "boolean",
        "optional": true
      },
      {
        "label": "Max Concurrency",
        "name": "maxConcurrency",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Ignore Paths",
        "name": "ignorePath",
        "description": "An array of paths to be ignored",
        "placeholder": "[\"*.md\"]",
        "type": "string",
        "rows": 4,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Max Retries",
        "name": "maxRetries",
        "description": "The maximum number of retries that can be made for a single call, with an exponential backoff between each attempt. Defaults to 2.",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Github/Github.js"
  },
  {
    "label": "Json File",
    "name": "jsonFile",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Json/json.svg",
    "category": "Document Loaders",
    "description": "Load data from JSON files",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Json File",
        "name": "jsonFile",
        "type": "file",
        "fileType": ".json"
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Pointers Extraction (separated by commas)",
        "name": "pointersName",
        "type": "string",
        "description": "Extracting multiple pointers",
        "placeholder": "Enter pointers name",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Json/Json.js"
  },
  {
    "label": "Json Lines File",
    "name": "jsonlinesFile",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Jsonlines/jsonlines.svg",
    "category": "Document Loaders",
    "description": "Load data from JSON Lines files",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Jsonlines File",
        "name": "jsonlinesFile",
        "type": "file",
        "fileType": ".jsonl"
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Pointer Extraction",
        "name": "pointerName",
        "type": "string",
        "placeholder": "Enter pointer name",
        "optional": false
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Jsonlines/Jsonlines.js"
  },
  {
    "label": "Notion Database",
    "name": "notionDB",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Notion/notion-db.svg",
    "category": "Document Loaders",
    "description": "Load data from Notion Database (each row is a separate document with all properties as metadata)",
    "baseClasses": ["Document"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["notionApi"]
    },
    "inputs": [
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Notion Database Id",
        "name": "databaseId",
        "type": "string",
        "description": "If your URL looks like - https://www.notion.so/abcdefh?v=long_hash_2, then abcdefh is the database ID"
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Notion/NotionDB.js"
  },
  {
    "label": "Notion Folder",
    "name": "notionFolder",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Notion/notion-folder.svg",
    "category": "Document Loaders",
    "description": "Load data from the exported and unzipped Notion folder",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Notion Folder",
        "name": "notionFolder",
        "type": "string",
        "description": "Get folder path",
        "placeholder": "Paste folder path"
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Notion/NotionFolder.js"
  },
  {
    "label": "Notion Page",
    "name": "notionPage",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Notion/notion-page.svg",
    "category": "Document Loaders",
    "description": "Load data from Notion Page (including child pages all as separate documents)",
    "baseClasses": ["Document"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["notionApi"]
    },
    "inputs": [
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Notion Page Id",
        "name": "pageId",
        "type": "string",
        "description": "The last The 32 char hex in the url path. For example: https://www.notion.so/skarard/LangChain-Notion-API-b34ca03f219c4420a6046fc4bdfdf7b4, b34ca03f219c4420a6046fc4bdfdf7b4 is the Page ID"
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Notion/NotionPage.js"
  },
  {
    "label": "Pdf File",
    "name": "pdfFile",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Pdf/pdf.svg",
    "category": "Document Loaders",
    "description": "Load data from PDF files",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Pdf File",
        "name": "pdfFile",
        "type": "file",
        "fileType": ".pdf"
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Usage",
        "name": "usage",
        "type": "options",
        "options": [
          { "label": "One document per page", "name": "perPage" },
          { "label": "One document per file", "name": "perFile" }
        ],
        "default": "perPage"
      },
      {
        "label": "Use Legacy Build",
        "name": "legacyBuild",
        "type": "boolean",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Pdf/Pdf.js"
  },
  {
    "label": "Plain Text",
    "name": "plainText",
    "version": 2,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/PlainText/plaintext.svg",
    "category": "Document Loaders",
    "description": "Load data from plain text",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Text",
        "name": "text",
        "type": "string",
        "rows": 4,
        "placeholder": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua..."
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "outputs": [
      { "label": "Document", "name": "document", "baseClasses": ["Document"] },
      { "label": "Text", "name": "text", "baseClasses": ["string", "json"] }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/PlainText/PlainText.js"
  },
  {
    "label": "Playwright Web Scraper",
    "name": "playwrightWebScraper",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Playwright/playwright.svg",
    "category": "Document Loaders",
    "description": "Load data from webpages",
    "baseClasses": ["Document"],
    "inputs": [
      { "label": "URL", "name": "url", "type": "string" },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Get Relative Links Method",
        "name": "relativeLinksMethod",
        "type": "options",
        "description": "Select a method to retrieve relative links",
        "options": [
          {
            "label": "Web Crawl",
            "name": "webCrawl",
            "description": "Crawl relative links from HTML URL"
          },
          {
            "label": "Scrape XML Sitemap",
            "name": "scrapeXMLSitemap",
            "description": "Scrape relative links from XML sitemap URL"
          }
        ],
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Get Relative Links Limit",
        "name": "limit",
        "type": "number",
        "optional": true,
        "additionalParams": true,
        "description": "Only used when \"Get Relative Links Method\" is selected. Set 0 to retrieve all relative links, default limit is 10.",
        "warning": "Retrieving all links might take long time, and all links will be upserted again if the flow's state changed (eg: different URL, chunk size, etc)"
      },
      {
        "label": "Wait Until",
        "name": "waitUntilGoToOption",
        "type": "options",
        "description": "Select a go to wait until option",
        "options": [
          {
            "label": "Load",
            "name": "load",
            "description": "Consider operation to be finished when the load event is fired."
          },
          {
            "label": "DOM Content Loaded",
            "name": "domcontentloaded",
            "description": "Consider operation to be finished when the DOMContentLoaded event is fired."
          },
          {
            "label": "Network Idle",
            "name": "networkidle",
            "description": "Navigation is finished when there are no more connections for at least 500 ms."
          },
          {
            "label": "Commit",
            "name": "commit",
            "description": "Consider operation to be finished when network response is received and the document started loading."
          }
        ],
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Wait for selector to load",
        "name": "waitForSelector",
        "type": "string",
        "optional": true,
        "additionalParams": true,
        "description": "CSS selectors like .div or #div"
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Playwright/Playwright.js"
  },
  {
    "label": "Puppeteer Web Scraper",
    "name": "puppeteerWebScraper",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Puppeteer/puppeteer.svg",
    "category": "Document Loaders",
    "description": "Load data from webpages",
    "baseClasses": ["Document"],
    "inputs": [
      { "label": "URL", "name": "url", "type": "string" },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Get Relative Links Method",
        "name": "relativeLinksMethod",
        "type": "options",
        "description": "Select a method to retrieve relative links",
        "options": [
          {
            "label": "Web Crawl",
            "name": "webCrawl",
            "description": "Crawl relative links from HTML URL"
          },
          {
            "label": "Scrape XML Sitemap",
            "name": "scrapeXMLSitemap",
            "description": "Scrape relative links from XML sitemap URL"
          }
        ],
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Get Relative Links Limit",
        "name": "limit",
        "type": "number",
        "optional": true,
        "additionalParams": true,
        "description": "Only used when \"Get Relative Links Method\" is selected. Set 0 to retrieve all relative links, default limit is 10.",
        "warning": "Retrieving all links might take long time, and all links will be upserted again if the flow's state changed (eg: different URL, chunk size, etc)"
      },
      {
        "label": "Wait Until",
        "name": "waitUntilGoToOption",
        "type": "options",
        "description": "Select a go to wait until option",
        "options": [
          {
            "label": "Load",
            "name": "load",
            "description": "When the initial HTML document's DOM has been loaded and parsed"
          },
          {
            "label": "DOM Content Loaded",
            "name": "domcontentloaded",
            "description": "When the complete HTML document's DOM has been loaded and parsed"
          },
          {
            "label": "Network Idle 0",
            "name": "networkidle0",
            "description": "Navigation is finished when there are no more than 0 network connections for at least 500 ms"
          },
          {
            "label": "Network Idle 2",
            "name": "networkidle2",
            "description": "Navigation is finished when there are no more than 2 network connections for at least 500 ms"
          }
        ],
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Wait for selector to load",
        "name": "waitForSelector",
        "type": "string",
        "optional": true,
        "additionalParams": true,
        "description": "CSS selectors like .div or #div"
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Puppeteer/Puppeteer.js"
  },
  {
    "label": "S3",
    "name": "S3",
    "version": 2,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/S3File/s3.svg",
    "category": "Document Loaders",
    "description": "Load Data from S3 Buckets",
    "baseClasses": ["Document"],
    "credential": {
      "label": "AWS Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["awsApi"]
    },
    "inputs": [
      { "label": "Bucket", "name": "bucketName", "type": "string" },
      {
        "label": "Object Key",
        "name": "keyName",
        "type": "string",
        "description": "The object key (or key name) that uniquely identifies object in an Amazon S3 bucket",
        "placeholder": "AI-Paper.pdf"
      },
      {
        "label": "Region",
        "name": "region",
        "type": "options",
        "options": [
          { "label": "af-south-1", "name": "af-south-1" },
          { "label": "ap-east-1", "name": "ap-east-1" },
          { "label": "ap-northeast-1", "name": "ap-northeast-1" },
          { "label": "ap-northeast-2", "name": "ap-northeast-2" },
          { "label": "ap-northeast-3", "name": "ap-northeast-3" },
          { "label": "ap-south-1", "name": "ap-south-1" },
          { "label": "ap-south-2", "name": "ap-south-2" },
          { "label": "ap-southeast-1", "name": "ap-southeast-1" },
          { "label": "ap-southeast-2", "name": "ap-southeast-2" },
          { "label": "ap-southeast-3", "name": "ap-southeast-3" },
          { "label": "ap-southeast-4", "name": "ap-southeast-4" },
          { "label": "ap-southeast-5", "name": "ap-southeast-5" },
          { "label": "ap-southeast-6", "name": "ap-southeast-6" },
          { "label": "ca-central-1", "name": "ca-central-1" },
          { "label": "ca-west-1", "name": "ca-west-1" },
          { "label": "cn-north-1", "name": "cn-north-1" },
          { "label": "cn-northwest-1", "name": "cn-northwest-1" },
          { "label": "eu-central-1", "name": "eu-central-1" },
          { "label": "eu-central-2", "name": "eu-central-2" },
          { "label": "eu-north-1", "name": "eu-north-1" },
          { "label": "eu-south-1", "name": "eu-south-1" },
          { "label": "eu-south-2", "name": "eu-south-2" },
          { "label": "eu-west-1", "name": "eu-west-1" },
          { "label": "eu-west-2", "name": "eu-west-2" },
          { "label": "eu-west-3", "name": "eu-west-3" },
          { "label": "il-central-1", "name": "il-central-1" },
          { "label": "me-central-1", "name": "me-central-1" },
          { "label": "me-south-1", "name": "me-south-1" },
          { "label": "sa-east-1", "name": "sa-east-1" },
          { "label": "us-east-1", "name": "us-east-1" },
          { "label": "us-east-2", "name": "us-east-2" },
          { "label": "us-gov-east-1", "name": "us-gov-east-1" },
          { "label": "us-gov-west-1", "name": "us-gov-west-1" },
          { "label": "us-west-1", "name": "us-west-1" },
          { "label": "us-west-2", "name": "us-west-2" }
        ],
        "default": "us-east-1"
      },
      {
        "label": "Unstructured API URL",
        "name": "unstructuredAPIUrl",
        "description": "Your Unstructured.io URL. Read <a target=\"_blank\" href=\"https://unstructured-io.github.io/unstructured/introduction.html#getting-started\">more</a> on how to get started",
        "type": "string",
        "default": "http://localhost:8000/general/v0/general"
      },
      {
        "label": "Unstructured API KEY",
        "name": "unstructuredAPIKey",
        "type": "password",
        "optional": true
      },
      {
        "label": "Element Type",
        "name": "elementType",
        "description": "Unstructured partition document into different types, select the types to return. If not selected, all types will be returned",
        "type": "multiOptions",
        "options": [
          { "label": "FigureCaption", "name": "FigureCaption" },
          { "label": "NarrativeText", "name": "NarrativeText" },
          { "label": "ListItem", "name": "ListItem" },
          { "label": "Title", "name": "Title" },
          { "label": "Address", "name": "Address" },
          { "label": "Table", "name": "Table" },
          { "label": "PageBreak", "name": "PageBreak" },
          { "label": "Header", "name": "Header" },
          { "label": "Footer", "name": "Footer" },
          { "label": "UncategorizedText", "name": "UncategorizedText" },
          { "label": "Image", "name": "Image" },
          { "label": "Formula", "name": "Formula" }
        ],
        "default": [],
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/S3File/S3File.js"
  },
  {
    "label": "SearchApi For Web Search",
    "name": "searchApi",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/SearchApi/searchapi.svg",
    "category": "Document Loaders",
    "description": "Load data from real-time search results",
    "baseClasses": ["Document"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": false,
      "credentialNames": ["searchApi"]
    },
    "inputs": [
      { "label": "Query", "name": "query", "type": "string", "optional": true },
      {
        "label": "Custom Parameters",
        "name": "customParameters",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/SearchApi/SearchAPI.js"
  },
  {
    "label": "SerpApi For Web Search",
    "name": "serpApi",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/SerpApi/serp.svg",
    "category": "Document Loaders",
    "description": "Load and process data from web search results",
    "baseClasses": ["Document"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": false,
      "credentialNames": ["serpApi"]
    },
    "inputs": [
      { "label": "Query", "name": "query", "type": "string" },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/SerpApi/SerpAPI.js"
  },
  {
    "label": "Subtitles File",
    "name": "subtitlesFile",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Subtitles/subtitlesFile.svg",
    "category": "Document Loaders",
    "description": "Load data from subtitles files",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Subtitles File",
        "name": "subtitlesFile",
        "type": "file",
        "fileType": ".srt"
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Subtitles/Subtitles.js"
  },
  {
    "label": "Text File",
    "name": "textFile",
    "version": 3,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Text/Txt.svg",
    "category": "Document Loaders",
    "description": "Load data from text files",
    "baseClasses": ["Document"],
    "inputs": [
      {
        "label": "Txt File",
        "name": "txtFile",
        "type": "file",
        "fileType": ".txt, .html, .aspx, .asp, .cpp, .c, .cs, .css, .go, .h, .java, .js, .less, .ts, .php, .proto, .python, .py, .rst, .ruby, .rb, .rs, .scala, .sc, .scss, .sol, .sql, .swift, .markdown, .md, .tex, .ltx, .vb, .xml"
      },
      {
        "label": "Text Splitter",
        "name": "textSplitter",
        "type": "TextSplitter",
        "optional": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "outputs": [
      { "label": "Document", "name": "document", "baseClasses": ["Document"] },
      { "label": "Text", "name": "text", "baseClasses": ["string", "json"] }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Text/Text.js"
  },
  {
    "label": "Unstructured File Loader",
    "name": "unstructuredFileLoader",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Unstructured/unstructured-file.svg",
    "category": "Document Loaders",
    "description": "Use Unstructured.io to load data from a file path",
    "baseClasses": ["Document"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["unstructuredApi"],
      "optional": true
    },
    "inputs": [
      {
        "label": "File Path",
        "name": "filePath",
        "type": "string",
        "placeholder": ""
      },
      {
        "label": "Unstructured API URL",
        "name": "unstructuredAPIUrl",
        "description": "Unstructured API URL. Read <a target=\"_blank\" href=\"https://unstructured-io.github.io/unstructured/introduction.html#getting-started\">more</a> on how to get started",
        "type": "string",
        "default": "http://localhost:8000/general/v0/general"
      },
      {
        "label": "Element Type",
        "name": "elementType",
        "description": "Unstructured partition document into different types, select the types to return. If not selected, all types will be returned",
        "type": "multiOptions",
        "options": [
          { "label": "FigureCaption", "name": "FigureCaption" },
          { "label": "NarrativeText", "name": "NarrativeText" },
          { "label": "ListItem", "name": "ListItem" },
          { "label": "Title", "name": "Title" },
          { "label": "Address", "name": "Address" },
          { "label": "Table", "name": "Table" },
          { "label": "PageBreak", "name": "PageBreak" },
          { "label": "Header", "name": "Header" },
          { "label": "Footer", "name": "Footer" },
          { "label": "UncategorizedText", "name": "UncategorizedText" },
          { "label": "Image", "name": "Image" },
          { "label": "Formula", "name": "Formula" }
        ],
        "default": [],
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Unstructured/UnstructuredFile.js"
  },
  {
    "label": "Unstructured Folder Loader",
    "name": "unstructuredFolderLoader",
    "version": 1,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Unstructured/unstructured-folder.svg",
    "category": "Document Loaders",
    "description": "Use Unstructured.io to load data from a folder",
    "baseClasses": ["Document"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["unstructuredApi"],
      "optional": true
    },
    "inputs": [
      {
        "label": "Folder Path",
        "name": "folderPath",
        "type": "string",
        "placeholder": ""
      },
      {
        "label": "Unstructured API URL",
        "name": "unstructuredAPIUrl",
        "description": "Unstructured API URL. Read <a target=\"_blank\" href=\"https://unstructured-io.github.io/unstructured/introduction.html#getting-started\">more</a> on how to get started",
        "type": "string",
        "default": "http://localhost:8000/general/v0/general"
      },
      {
        "label": "Element Type",
        "name": "elementType",
        "description": "Unstructured partition document into different types, select the types to return. If not selected, all types will be returned",
        "type": "multiOptions",
        "options": [
          { "label": "FigureCaption", "name": "FigureCaption" },
          { "label": "NarrativeText", "name": "NarrativeText" },
          { "label": "ListItem", "name": "ListItem" },
          { "label": "Title", "name": "Title" },
          { "label": "Address", "name": "Address" },
          { "label": "Table", "name": "Table" },
          { "label": "PageBreak", "name": "PageBreak" },
          { "label": "Header", "name": "Header" },
          { "label": "Footer", "name": "Footer" },
          { "label": "UncategorizedText", "name": "UncategorizedText" },
          { "label": "Image", "name": "Image" },
          { "label": "Formula", "name": "Formula" }
        ],
        "default": [],
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Metadata",
        "name": "metadata",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/Unstructured/UnstructuredFolder.js"
  },
  {
    "label": "VectorStore To Document",
    "name": "vectorStoreToDocument",
    "version": 2,
    "type": "Document",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/VectorStoreToDocument/vectorretriever.svg",
    "category": "Document Loaders",
    "description": "Search documents with scores from vector store",
    "baseClasses": ["Document"],
    "inputs": [
      { "label": "Vector Store", "name": "vectorStore", "type": "VectorStore" },
      {
        "label": "Query",
        "name": "query",
        "type": "string",
        "description": "Query to retrieve documents from vector database. If not specified, user question will be used",
        "optional": true,
        "acceptVariable": true
      },
      {
        "label": "Minimum Score (%)",
        "name": "minScore",
        "type": "number",
        "optional": true,
        "placeholder": "75",
        "step": 1,
        "description": "Minumum score for embeddings documents to be included"
      }
    ],
    "outputs": [
      { "label": "Document", "name": "document", "baseClasses": ["Document"] },
      { "label": "Text", "name": "text", "baseClasses": ["string", "json"] }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/documentloaders/VectorStoreToDocument/VectorStoreToDocument.js"
  },
  {
    "label": "AWS Bedrock Embeddings",
    "name": "AWSBedrockEmbeddings",
    "version": 3,
    "type": "AWSBedrockEmbeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/AWSBedrockEmbedding/aws.svg",
    "category": "Embeddings",
    "description": "AWSBedrock embedding models to generate embeddings for a given text",
    "baseClasses": ["AWSBedrockEmbeddings", "Embeddings"],
    "credential": {
      "label": "AWS Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["awsApi"],
      "optional": true
    },
    "inputs": [
      {
        "label": "Region",
        "name": "region",
        "type": "options",
        "options": [
          { "label": "af-south-1", "name": "af-south-1" },
          { "label": "ap-east-1", "name": "ap-east-1" },
          { "label": "ap-northeast-1", "name": "ap-northeast-1" },
          { "label": "ap-northeast-2", "name": "ap-northeast-2" },
          { "label": "ap-northeast-3", "name": "ap-northeast-3" },
          { "label": "ap-south-1", "name": "ap-south-1" },
          { "label": "ap-south-2", "name": "ap-south-2" },
          { "label": "ap-southeast-1", "name": "ap-southeast-1" },
          { "label": "ap-southeast-2", "name": "ap-southeast-2" },
          { "label": "ap-southeast-3", "name": "ap-southeast-3" },
          { "label": "ap-southeast-4", "name": "ap-southeast-4" },
          { "label": "ap-southeast-5", "name": "ap-southeast-5" },
          { "label": "ap-southeast-6", "name": "ap-southeast-6" },
          { "label": "ca-central-1", "name": "ca-central-1" },
          { "label": "ca-west-1", "name": "ca-west-1" },
          { "label": "cn-north-1", "name": "cn-north-1" },
          { "label": "cn-northwest-1", "name": "cn-northwest-1" },
          { "label": "eu-central-1", "name": "eu-central-1" },
          { "label": "eu-central-2", "name": "eu-central-2" },
          { "label": "eu-north-1", "name": "eu-north-1" },
          { "label": "eu-south-1", "name": "eu-south-1" },
          { "label": "eu-south-2", "name": "eu-south-2" },
          { "label": "eu-west-1", "name": "eu-west-1" },
          { "label": "eu-west-2", "name": "eu-west-2" },
          { "label": "eu-west-3", "name": "eu-west-3" },
          { "label": "il-central-1", "name": "il-central-1" },
          { "label": "me-central-1", "name": "me-central-1" },
          { "label": "me-south-1", "name": "me-south-1" },
          { "label": "sa-east-1", "name": "sa-east-1" },
          { "label": "us-east-1", "name": "us-east-1" },
          { "label": "us-east-2", "name": "us-east-2" },
          { "label": "us-gov-east-1", "name": "us-gov-east-1" },
          { "label": "us-gov-west-1", "name": "us-gov-west-1" },
          { "label": "us-west-1", "name": "us-west-1" },
          { "label": "us-west-2", "name": "us-west-2" }
        ],
        "default": "us-east-1"
      },
      {
        "label": "Model Name",
        "name": "model",
        "type": "options",
        "options": [
          {
            "label": "amazon.titan-embed-text-v1",
            "name": "amazon.titan-embed-text-v1"
          },
          {
            "label": "amazon.titan-embed-g1-text-02",
            "name": "amazon.titan-embed-g1-text-02"
          },
          {
            "label": "cohere.embed-english-v3",
            "name": "cohere.embed-english-v3"
          },
          {
            "label": "cohere.embed-multilingual-v3",
            "name": "cohere.embed-multilingual-v3"
          }
        ],
        "default": "amazon.titan-embed-text-v1"
      },
      {
        "label": "Custom Model Name",
        "name": "customModel",
        "description": "If provided, will override model selected from Model Name option",
        "type": "string",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/AWSBedrockEmbedding/AWSBedrockEmbedding.js"
  },
  {
    "label": "Azure OpenAI Embeddings",
    "name": "azureOpenAIEmbeddings",
    "version": 1,
    "type": "AzureOpenAIEmbeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/AzureOpenAIEmbedding/Azure.svg",
    "category": "Embeddings",
    "description": "Azure OpenAI API to generate embeddings for a given text",
    "baseClasses": ["AzureOpenAIEmbeddings", "Embeddings"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["azureOpenAIApi"]
    },
    "inputs": [
      {
        "label": "Batch Size",
        "name": "batchSize",
        "type": "number",
        "default": "1",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/AzureOpenAIEmbedding/AzureOpenAIEmbedding.js"
  },
  {
    "label": "Cohere Embeddings",
    "name": "cohereEmbeddings",
    "version": 1,
    "type": "CohereEmbeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/CohereEmbedding/Cohere.svg",
    "category": "Embeddings",
    "description": "Cohere API to generate embeddings for a given text",
    "baseClasses": ["CohereEmbeddings", "Embeddings"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["cohereApi"]
    },
    "inputs": [
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          { "label": "embed-english-v2.0", "name": "embed-english-v2.0" },
          {
            "label": "embed-english-light-v2.0",
            "name": "embed-english-light-v2.0"
          },
          {
            "label": "embed-multilingual-v2.0",
            "name": "embed-multilingual-v2.0"
          }
        ],
        "default": "embed-english-v2.0",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/CohereEmbedding/CohereEmbedding.js"
  },
  {
    "label": "GoogleGenerativeAI Embeddings",
    "name": "googleGenerativeAiEmbeddings",
    "version": 1,
    "type": "GoogleGenerativeAiEmbeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/GoogleGenerativeAIEmbedding/GoogleGemini.svg",
    "category": "Embeddings",
    "description": "Google Generative API to generate embeddings for a given text",
    "baseClasses": ["GoogleGenerativeAiEmbeddings", "Embeddings"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["googleGenerativeAI"],
      "optional": false,
      "description": "Google Generative AI credential."
    },
    "inputs": [
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [{ "label": "embedding-001", "name": "embedding-001" }],
        "default": "embedding-001"
      },
      {
        "label": "Task Type",
        "name": "tasktype",
        "type": "options",
        "description": "Type of task for which the embedding will be used",
        "options": [
          { "label": "TASK_TYPE_UNSPECIFIED", "name": "TASK_TYPE_UNSPECIFIED" },
          { "label": "RETRIEVAL_QUERY", "name": "RETRIEVAL_QUERY" },
          { "label": "RETRIEVAL_DOCUMENT", "name": "RETRIEVAL_DOCUMENT" },
          { "label": "SEMANTIC_SIMILARITY", "name": "SEMANTIC_SIMILARITY" },
          { "label": "CLASSIFICATION", "name": "CLASSIFICATION" },
          { "label": "CLUSTERING", "name": "CLUSTERING" }
        ],
        "default": "TASK_TYPE_UNSPECIFIED"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/GoogleGenerativeAIEmbedding/GoogleGenerativeAIEmbedding.js"
  },
  {
    "label": "Google PaLM Embeddings",
    "name": "googlePaLMEmbeddings",
    "version": 1,
    "type": "GooglePaLMEmbeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/GooglePaLMEmbedding/GooglePaLM.svg",
    "category": "Embeddings",
    "description": "Google MakerSuite PaLM API to generate embeddings for a given text",
    "baseClasses": ["GooglePaLMEmbeddings", "Embeddings"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["googleMakerSuite"]
    },
    "inputs": [
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          {
            "label": "models/embedding-gecko-001",
            "name": "models/embedding-gecko-001"
          }
        ],
        "default": "models/embedding-gecko-001",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/GooglePaLMEmbedding/GooglePaLMEmbedding.js"
  },
  {
    "label": "GoogleVertexAI Embeddings",
    "name": "googlevertexaiEmbeddings",
    "version": 1,
    "type": "GoogleVertexAIEmbeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/GoogleVertexAIEmbedding/GoogleVertex.svg",
    "category": "Embeddings",
    "description": "Google vertexAI API to generate embeddings for a given text",
    "baseClasses": ["GoogleVertexAIEmbeddings", "Embeddings"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["googleVertexAuth"],
      "optional": true,
      "description": "Google Vertex AI credential. If you are using a GCP service like Cloud Run, or if you have installed default credentials on your local machine, you do not need to set this credential."
    },
    "inputs": [
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          {
            "label": "textembedding-gecko@001",
            "name": "textembedding-gecko@001"
          },
          {
            "label": "textembedding-gecko@latest",
            "name": "textembedding-gecko@latest"
          },
          {
            "label": "textembedding-gecko-multilingual@latest",
            "name": "textembedding-gecko-multilingual@latest"
          }
        ],
        "default": "textembedding-gecko@001",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/GoogleVertexAIEmbedding/GoogleVertexAIEmbedding.js"
  },
  {
    "label": "HuggingFace Inference Embeddings",
    "name": "huggingFaceInferenceEmbeddings",
    "version": 1,
    "type": "HuggingFaceInferenceEmbeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/HuggingFaceInferenceEmbedding/HuggingFace.svg",
    "category": "Embeddings",
    "description": "HuggingFace Inference API to generate embeddings for a given text",
    "baseClasses": ["HuggingFaceInferenceEmbeddings", "Embeddings"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["huggingFaceApi"]
    },
    "inputs": [
      {
        "label": "Model",
        "name": "modelName",
        "type": "string",
        "description": "If using own inference endpoint, leave this blank",
        "placeholder": "sentence-transformers/distilbert-base-nli-mean-tokens",
        "optional": true
      },
      {
        "label": "Endpoint",
        "name": "endpoint",
        "type": "string",
        "placeholder": "https://xyz.eu-west-1.aws.endpoints.huggingface.cloud/sentence-transformers/all-MiniLM-L6-v2",
        "description": "Using your own inference endpoint",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/HuggingFaceInferenceEmbedding/HuggingFaceInferenceEmbedding.js"
  },
  {
    "label": "LocalAI Embeddings",
    "name": "localAIEmbeddings",
    "version": 1,
    "type": "LocalAI Embeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/LocalAIEmbedding/localai.png",
    "category": "Embeddings",
    "description": "Use local embeddings models like llama.cpp",
    "baseClasses": ["LocalAI Embeddings", "Embeddings"],
    "inputs": [
      {
        "label": "Base Path",
        "name": "basePath",
        "type": "string",
        "placeholder": "http://localhost:8080/v1"
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "string",
        "placeholder": "text-embedding-ada-002"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/LocalAIEmbedding/LocalAIEmbedding.js"
  },
  {
    "label": "MistralAI Embeddings",
    "name": "mistralAI Embeddings",
    "version": 1,
    "type": "MistralAIEmbeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/MistralEmbedding/MistralAI.svg",
    "category": "Embeddings",
    "description": "MistralAI API to generate embeddings for a given text",
    "baseClasses": ["MistralAIEmbeddings", "Embeddings"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["mistralAIApi"]
    },
    "inputs": [
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [{ "label": "mistral-embed", "name": "mistral-embed" }],
        "default": "mistral-embed"
      },
      {
        "label": "Batch Size",
        "name": "batchSize",
        "type": "number",
        "step": 1,
        "default": 512,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Strip New Lines",
        "name": "stripNewLines",
        "type": "boolean",
        "default": true,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Override Endpoint",
        "name": "overrideEndpoint",
        "type": "string",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/MistralEmbedding/MistralEmbedding.js"
  },
  {
    "label": "Ollama Embeddings",
    "name": "ollamaEmbedding",
    "version": 1,
    "type": "OllamaEmbeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/OllamaEmbedding/Ollama.svg",
    "category": "Embeddings",
    "description": "Generate embeddings for a given text using open source model on Ollama",
    "baseClasses": ["OllamaEmbeddings", "Embeddings"],
    "inputs": [
      {
        "label": "Base URL",
        "name": "baseUrl",
        "type": "string",
        "default": "http://localhost:11434"
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "string",
        "placeholder": "llama2"
      },
      {
        "label": "Number of GPU",
        "name": "numGpu",
        "type": "number",
        "description": "The number of layers to send to the GPU(s). On macOS it defaults to 1 to enable metal support, 0 to disable. Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Number of Thread",
        "name": "numThread",
        "type": "number",
        "description": "Sets the number of threads to use during computation. By default, Ollama will detect this for optimal performance. It is recommended to set this value to the number of physical CPU cores your system has (as opposed to the logical number of cores). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Use MMap",
        "name": "useMMap",
        "type": "boolean",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/OllamaEmbedding/OllamaEmbedding.js"
  },
  {
    "label": "OpenAI Embeddings",
    "name": "openAIEmbeddings",
    "version": 1,
    "type": "OpenAIEmbeddings",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/OpenAIEmbedding/openai.svg",
    "category": "Embeddings",
    "description": "OpenAI API to generate embeddings for a given text",
    "baseClasses": ["OpenAIEmbeddings", "Embeddings"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["openAIApi"]
    },
    "inputs": [
      {
        "label": "Strip New Lines",
        "name": "stripNewLines",
        "type": "boolean",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Batch Size",
        "name": "batchSize",
        "type": "number",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "BasePath",
        "name": "basepath",
        "type": "string",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/OpenAIEmbedding/OpenAIEmbedding.js"
  },
  {
    "label": "OpenAI Embeddings Custom",
    "name": "openAIEmbeddingsCustom",
    "version": 1,
    "type": "OpenAIEmbeddingsCustom",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/OpenAIEmbeddingCustom/openai.svg",
    "category": "Embeddings",
    "description": "OpenAI API to generate embeddings for a given text",
    "baseClasses": ["OpenAIEmbeddingsCustom", "Embeddings"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["openAIApi"]
    },
    "inputs": [
      {
        "label": "Strip New Lines",
        "name": "stripNewLines",
        "type": "boolean",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Batch Size",
        "name": "batchSize",
        "type": "number",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "BasePath",
        "name": "basepath",
        "type": "string",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "string",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/embeddings/OpenAIEmbeddingCustom/OpenAIEmbeddingCustom.js"
  },
  {
    "label": "AWS Bedrock",
    "name": "awsBedrock",
    "version": 3,
    "type": "AWSBedrock",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/AWSBedrock/aws.svg",
    "category": "LLMs",
    "description": "Wrapper around AWS Bedrock large language models",
    "baseClasses": [
      "AWSBedrock",
      "Bedrock",
      "LLM",
      "BaseLLM",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "AWS Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["awsApi"],
      "optional": true
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Region",
        "name": "region",
        "type": "options",
        "options": [
          { "label": "af-south-1", "name": "af-south-1" },
          { "label": "ap-east-1", "name": "ap-east-1" },
          { "label": "ap-northeast-1", "name": "ap-northeast-1" },
          { "label": "ap-northeast-2", "name": "ap-northeast-2" },
          { "label": "ap-northeast-3", "name": "ap-northeast-3" },
          { "label": "ap-south-1", "name": "ap-south-1" },
          { "label": "ap-south-2", "name": "ap-south-2" },
          { "label": "ap-southeast-1", "name": "ap-southeast-1" },
          { "label": "ap-southeast-2", "name": "ap-southeast-2" },
          { "label": "ap-southeast-3", "name": "ap-southeast-3" },
          { "label": "ap-southeast-4", "name": "ap-southeast-4" },
          { "label": "ap-southeast-5", "name": "ap-southeast-5" },
          { "label": "ap-southeast-6", "name": "ap-southeast-6" },
          { "label": "ca-central-1", "name": "ca-central-1" },
          { "label": "ca-west-1", "name": "ca-west-1" },
          { "label": "cn-north-1", "name": "cn-north-1" },
          { "label": "cn-northwest-1", "name": "cn-northwest-1" },
          { "label": "eu-central-1", "name": "eu-central-1" },
          { "label": "eu-central-2", "name": "eu-central-2" },
          { "label": "eu-north-1", "name": "eu-north-1" },
          { "label": "eu-south-1", "name": "eu-south-1" },
          { "label": "eu-south-2", "name": "eu-south-2" },
          { "label": "eu-west-1", "name": "eu-west-1" },
          { "label": "eu-west-2", "name": "eu-west-2" },
          { "label": "eu-west-3", "name": "eu-west-3" },
          { "label": "il-central-1", "name": "il-central-1" },
          { "label": "me-central-1", "name": "me-central-1" },
          { "label": "me-south-1", "name": "me-south-1" },
          { "label": "sa-east-1", "name": "sa-east-1" },
          { "label": "us-east-1", "name": "us-east-1" },
          { "label": "us-east-2", "name": "us-east-2" },
          { "label": "us-gov-east-1", "name": "us-gov-east-1" },
          { "label": "us-gov-west-1", "name": "us-gov-west-1" },
          { "label": "us-west-1", "name": "us-west-1" },
          { "label": "us-west-2", "name": "us-west-2" }
        ],
        "default": "us-east-1"
      },
      {
        "label": "Model Name",
        "name": "model",
        "type": "options",
        "options": [
          {
            "label": "amazon.titan-tg1-large",
            "name": "amazon.titan-tg1-large"
          },
          {
            "label": "amazon.titan-e1t-medium",
            "name": "amazon.titan-e1t-medium"
          },
          {
            "label": "cohere.command-text-v14",
            "name": "cohere.command-text-v14"
          },
          {
            "label": "cohere.command-light-text-v14",
            "name": "cohere.command-light-text-v14"
          },
          {
            "label": "ai21.j2-grande-instruct",
            "name": "ai21.j2-grande-instruct"
          },
          {
            "label": "ai21.j2-jumbo-instruct",
            "name": "ai21.j2-jumbo-instruct"
          },
          { "label": "ai21.j2-mid", "name": "ai21.j2-mid" },
          { "label": "ai21.j2-ultra", "name": "ai21.j2-ultra" }
        ]
      },
      {
        "label": "Custom Model Name",
        "name": "customModel",
        "description": "If provided, will override model selected from Model Name option",
        "type": "string",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "description": "Temperature parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true,
        "default": 0.7
      },
      {
        "label": "Max Tokens to Sample",
        "name": "max_tokens_to_sample",
        "type": "number",
        "step": 10,
        "description": "Max Tokens parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true,
        "default": 200
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/AWSBedrock/AWSBedrock.js"
  },
  {
    "label": "Azure OpenAI",
    "name": "azureOpenAI",
    "version": 2,
    "type": "AzureOpenAI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/Azure OpenAI/Azure.svg",
    "category": "LLMs",
    "description": "Wrapper around Azure OpenAI large language models",
    "baseClasses": ["AzureOpenAI", "BaseLLM", "BaseLanguageModel", "Runnable"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["azureOpenAIApi"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          { "label": "text-davinci-003", "name": "text-davinci-003" },
          { "label": "ada", "name": "ada" },
          { "label": "text-ada-001", "name": "text-ada-001" },
          { "label": "babbage", "name": "babbage" },
          { "label": "text-babbage-001", "name": "text-babbage-001" },
          { "label": "curie", "name": "curie" },
          { "label": "text-curie-001", "name": "text-curie-001" },
          { "label": "davinci", "name": "davinci" },
          { "label": "text-davinci-001", "name": "text-davinci-001" },
          { "label": "text-davinci-002", "name": "text-davinci-002" },
          {
            "label": "text-davinci-fine-tune-002",
            "name": "text-davinci-fine-tune-002"
          },
          { "label": "gpt-35-turbo", "name": "gpt-35-turbo" }
        ],
        "default": "text-davinci-003",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Best Of",
        "name": "bestOf",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Frequency Penalty",
        "name": "frequencyPenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Presence Penalty",
        "name": "presencePenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/Azure OpenAI/AzureOpenAI.js"
  },
  {
    "label": "NIBittensorLLM",
    "name": "NIBittensorLLM",
    "version": 2,
    "type": "Bittensor",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/Bittensor/NIBittensor.svg",
    "category": "LLMs",
    "description": "Wrapper around Bittensor subnet 1 large language models",
    "baseClasses": [
      "Bittensor",
      "LLM",
      "BaseLLM",
      "BaseLanguageModel",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "System prompt",
        "name": "system_prompt",
        "type": "string",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top Responses",
        "name": "topResponses",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/Bittensor/Bittensor.js"
  },
  {
    "label": "Cohere",
    "name": "cohere",
    "version": 2,
    "type": "Cohere",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/Cohere/Cohere.svg",
    "category": "LLMs",
    "description": "Wrapper around Cohere large language models",
    "baseClasses": [
      "Cohere",
      "LLM",
      "BaseLLM",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["cohereApi"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          { "label": "command", "name": "command" },
          { "label": "command-light", "name": "command-light" },
          { "label": "command-nightly", "name": "command-nightly" },
          { "label": "command-light-nightly", "name": "command-light-nightly" },
          { "label": "base", "name": "base" },
          { "label": "base-light", "name": "base-light" }
        ],
        "default": "command",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.7,
        "optional": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/Cohere/Cohere.js"
  },
  {
    "label": "GooglePaLM",
    "name": "GooglePaLM",
    "version": 2,
    "type": "GooglePaLM",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/GooglePaLM/GooglePaLM.svg",
    "category": "LLMs",
    "description": "Wrapper around Google MakerSuite PaLM large language models",
    "baseClasses": [
      "GooglePaLM",
      "LLM",
      "BaseLLM",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["googleMakerSuite"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          { "label": "models/text-bison-001", "name": "models/text-bison-001" }
        ],
        "default": "models/text-bison-001",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.7,
        "optional": true,
        "description": "Controls the randomness of the output.\nValues can range from [0.0,1.0], inclusive. A value closer to 1.0 will produce responses that are more varied and creative, while a value closer to 0.0 will typically result in more straightforward responses from the model."
      },
      {
        "label": "Max Output Tokens",
        "name": "maxOutputTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true,
        "description": "Maximum number of tokens to generate in the completion."
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true,
        "description": "Top-p changes how the model selects tokens for output.\nTokens are selected from most probable to least until the sum of their probabilities equals the top-p value.\nFor example, if tokens A, B, and C have a probability of .3, .2, and .1 and the top-p value is .5, then the model will select either A or B as the next token (using temperature)."
      },
      {
        "label": "Top-k",
        "name": "topK",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true,
        "description": "Top-k changes how the model selects tokens for output.\nA top-k of 1 means the selected token is the most probable among all tokens in the model vocabulary (also called greedy decoding), while a top-k of 3 means that the next token is selected from among the 3 most probable tokens (using temperature)."
      },
      {
        "label": "Stop Sequences",
        "name": "stopSequencesObj",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/GooglePaLM/GooglePaLM.js"
  },
  {
    "label": "GoogleVertexAI",
    "name": "googlevertexai",
    "version": 2,
    "type": "GoogleVertexAI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/GoogleVertexAI/GoogleVertex.svg",
    "category": "LLMs",
    "description": "Wrapper around GoogleVertexAI large language models",
    "baseClasses": [
      "GoogleVertexAI",
      "BaseGoogleVertexAI",
      "BaseLLM",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["googleVertexAuth"],
      "optional": true,
      "description": "Google Vertex AI credential. If you are using a GCP service like Cloud Run, or if you have installed default credentials on your local machine, you do not need to set this credential."
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          { "label": "text-bison", "name": "text-bison" },
          { "label": "code-bison", "name": "code-bison" },
          { "label": "code-gecko", "name": "code-gecko" },
          { "label": "text-bison-32k", "name": "text-bison-32k" },
          { "label": "code-bison-32k", "name": "code-bison-32k" },
          { "label": "code-gecko-32k", "name": "code-gecko-32k" }
        ],
        "default": "text-bison"
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.7,
        "optional": true
      },
      {
        "label": "max Output Tokens",
        "name": "maxOutputTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/GoogleVertexAI/GoogleVertexAI.js"
  },
  {
    "label": "HuggingFace Inference",
    "name": "huggingFaceInference_LLMs",
    "version": 2,
    "type": "HuggingFaceInference",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/HuggingFaceInference/HuggingFace.svg",
    "category": "LLMs",
    "description": "Wrapper around HuggingFace large language models",
    "baseClasses": [
      "HuggingFaceInference",
      "LLM",
      "BaseLLM",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["huggingFaceApi"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model",
        "name": "model",
        "type": "string",
        "description": "If using own inference endpoint, leave this blank",
        "placeholder": "gpt2",
        "optional": true
      },
      {
        "label": "Endpoint",
        "name": "endpoint",
        "type": "string",
        "placeholder": "https://xyz.eu-west-1.aws.endpoints.huggingface.cloud/gpt2",
        "description": "Using your own inference endpoint",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "description": "Temperature parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "description": "Max Tokens parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "description": "Top Probability parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "hfTopK",
        "type": "number",
        "step": 0.1,
        "description": "Top K parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Frequency Penalty",
        "name": "frequencyPenalty",
        "type": "number",
        "step": 0.1,
        "description": "Frequency Penalty parameter may not apply to certain model. Please check available model parameters",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/HuggingFaceInference/HuggingFaceInference.js"
  },
  {
    "label": "Ollama",
    "name": "ollama",
    "version": 2,
    "type": "Ollama",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/Ollama/Ollama.svg",
    "category": "LLMs",
    "description": "Wrapper around open source large language models on Ollama",
    "baseClasses": [
      "Ollama",
      "LLM",
      "BaseLLM",
      "BaseLanguageModel",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Base URL",
        "name": "baseUrl",
        "type": "string",
        "default": "http://localhost:11434"
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "string",
        "placeholder": "llama2"
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "description": "The temperature of the model. Increasing the temperature will make the model answer more creatively. (Default: 0.8). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Top P",
        "name": "topP",
        "type": "number",
        "description": "Works together with top-k. A higher value (e.g., 0.95) will lead to more diverse text, while a lower value (e.g., 0.5) will generate more focused and conservative text. (Default: 0.9). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "type": "number",
        "description": "Reduces the probability of generating nonsense. A higher value (e.g. 100) will give more diverse answers, while a lower value (e.g. 10) will be more conservative. (Default: 40). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Mirostat",
        "name": "mirostat",
        "type": "number",
        "description": "Enable Mirostat sampling for controlling perplexity. (default: 0, 0 = disabled, 1 = Mirostat, 2 = Mirostat 2.0). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Mirostat ETA",
        "name": "mirostatEta",
        "type": "number",
        "description": "Influences how quickly the algorithm responds to feedback from the generated text. A lower learning rate will result in slower adjustments, while a higher learning rate will make the algorithm more responsive. (Default: 0.1) Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Mirostat TAU",
        "name": "mirostatTau",
        "type": "number",
        "description": "Controls the balance between coherence and diversity of the output. A lower value will result in more focused and coherent text. (Default: 5.0) Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Context Window Size",
        "name": "numCtx",
        "type": "number",
        "description": "Sets the size of the context window used to generate the next token. (Default: 2048) Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Number of GQA groups",
        "name": "numGqa",
        "type": "number",
        "description": "The number of GQA groups in the transformer layer. Required for some models, for example it is 8 for llama2:70b. Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Number of GPU",
        "name": "numGpu",
        "type": "number",
        "description": "The number of layers to send to the GPU(s). On macOS it defaults to 1 to enable metal support, 0 to disable. Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Number of Thread",
        "name": "numThread",
        "type": "number",
        "description": "Sets the number of threads to use during computation. By default, Ollama will detect this for optimal performance. It is recommended to set this value to the number of physical CPU cores your system has (as opposed to the logical number of cores). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Repeat Last N",
        "name": "repeatLastN",
        "type": "number",
        "description": "Sets how far back for the model to look back to prevent repetition. (Default: 64, 0 = disabled, -1 = num_ctx). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Repeat Penalty",
        "name": "repeatPenalty",
        "type": "number",
        "description": "Sets how strongly to penalize repetitions. A higher value (e.g., 1.5) will penalize repetitions more strongly, while a lower value (e.g., 0.9) will be more lenient. (Default: 1.1). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Stop Sequence",
        "name": "stop",
        "type": "string",
        "rows": 4,
        "placeholder": "AI assistant:",
        "description": "Sets the stop sequences to use. Use comma to seperate different sequences. Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Tail Free Sampling",
        "name": "tfsZ",
        "type": "number",
        "description": "Tail free sampling is used to reduce the impact of less probable tokens from the output. A higher value (e.g., 2.0) will reduce the impact more, while a value of 1.0 disables this setting. (Default: 1). Refer to <a target=\"_blank\" href=\"https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values\">docs</a> for more details",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/Ollama/Ollama.js"
  },
  {
    "label": "OpenAI",
    "name": "openAI",
    "version": 3,
    "type": "OpenAI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/OpenAI/openai.svg",
    "category": "LLMs",
    "description": "Wrapper around OpenAI large language models",
    "baseClasses": ["OpenAI", "BaseLLM", "BaseLanguageModel", "Runnable"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["openAIApi"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "options",
        "options": [
          {
            "label": "gpt-3.5-turbo-instruct",
            "name": "gpt-3.5-turbo-instruct"
          },
          { "label": "babbage-002", "name": "babbage-002" },
          { "label": "davinci-002", "name": "davinci-002" }
        ],
        "default": "gpt-3.5-turbo-instruct",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.7,
        "optional": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Best Of",
        "name": "bestOf",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Frequency Penalty",
        "name": "frequencyPenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Presence Penalty",
        "name": "presencePenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Batch Size",
        "name": "batchSize",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "BasePath",
        "name": "basepath",
        "type": "string",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "BaseOptions",
        "name": "baseOptions",
        "type": "json",
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/OpenAI/OpenAI.js"
  },
  {
    "label": "Replicate",
    "name": "replicate",
    "version": 2,
    "type": "Replicate",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/Replicate/replicate.svg",
    "category": "LLMs",
    "description": "Use Replicate to run open source models on cloud",
    "baseClasses": [
      "Replicate",
      "BaseChatModel",
      "LLM",
      "BaseLLM",
      "BaseLanguageModel",
      "Runnable"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["replicateApi"]
    },
    "inputs": [
      {
        "label": "Cache",
        "name": "cache",
        "type": "BaseCache",
        "optional": true
      },
      {
        "label": "Model",
        "name": "model",
        "type": "string",
        "placeholder": "a16z-infra/llama13b-v2-chat:df7690f1994d94e96ad9d568eac121aecf50684a0b0963b25a41cc40061269e5",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "description": "Adjusts randomness of outputs, greater than 1 is random and 0 is deterministic, 0.75 is a good starting value.",
        "default": 0.7,
        "optional": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "description": "Maximum number of tokens to generate. A word is generally 2-3 tokens",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "description": "When decoding text, samples from the top p percentage of most likely tokens; lower to ignore less likely tokens",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Repetition Penalty",
        "name": "repetitionPenalty",
        "type": "number",
        "step": 0.1,
        "description": "Penalty for repeated words in generated text; 1 is no penalty, values greater than 1 discourage repetition, less than 1 encourage it. (minimum: 0.01; maximum: 5)",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Additional Inputs",
        "name": "additionalInputs",
        "type": "json",
        "description": "Each model has different parameters, refer to the specific model accepted inputs. For example: <a target=\"_blank\" href=\"https://replicate.com/a16z-infra/llama13b-v2-chat/api#inputs\">llama13b-v2</a>",
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/llms/Replicate/Replicate.js"
  },
  {
    "label": "Buffer Memory",
    "name": "bufferMemory",
    "version": 1,
    "type": "BufferMemory",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/BufferMemory/memory.svg",
    "category": "Memory",
    "description": "Remembers previous conversational back and forths directly",
    "baseClasses": ["BufferMemory", "BaseChatMemory", "BaseMemory"],
    "inputs": [
      {
        "label": "Memory Key",
        "name": "memoryKey",
        "type": "string",
        "default": "chat_history"
      },
      {
        "label": "Input Key",
        "name": "inputKey",
        "type": "string",
        "default": "input"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/BufferMemory/BufferMemory.js"
  },
  {
    "label": "Buffer Window Memory",
    "name": "bufferWindowMemory",
    "version": 1,
    "type": "BufferWindowMemory",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/BufferWindowMemory/memory.svg",
    "category": "Memory",
    "description": "Uses a window of size k to surface the last k back-and-forth to use as memory",
    "baseClasses": ["BufferWindowMemory", "BaseChatMemory", "BaseMemory"],
    "inputs": [
      {
        "label": "Memory Key",
        "name": "memoryKey",
        "type": "string",
        "default": "chat_history"
      },
      {
        "label": "Input Key",
        "name": "inputKey",
        "type": "string",
        "default": "input"
      },
      {
        "label": "Size",
        "name": "k",
        "type": "number",
        "default": "4",
        "description": "Window of size k to surface the last k back-and-forth to use as memory."
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/BufferWindowMemory/BufferWindowMemory.js"
  },
  {
    "label": "Conversation Summary Memory",
    "name": "conversationSummaryMemory",
    "version": 1,
    "type": "ConversationSummaryMemory",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/ConversationSummaryMemory/memory.svg",
    "category": "Memory",
    "description": "Summarizes the conversation and stores the current summary in memory",
    "baseClasses": [
      "ConversationSummaryMemory",
      "BaseConversationSummaryMemory",
      "BaseChatMemory",
      "BaseMemory"
    ],
    "inputs": [
      { "label": "Chat Model", "name": "model", "type": "BaseChatModel" },
      {
        "label": "Memory Key",
        "name": "memoryKey",
        "type": "string",
        "default": "chat_history"
      },
      {
        "label": "Input Key",
        "name": "inputKey",
        "type": "string",
        "default": "input"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/ConversationSummaryMemory/ConversationSummaryMemory.js"
  },
  {
    "memoryMethods": {},
    "label": "DynamoDB Chat Memory",
    "name": "DynamoDBChatMemory",
    "version": 1,
    "type": "DynamoDBChatMemory",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/DynamoDb/dynamodb.svg",
    "category": "Memory",
    "description": "Stores the conversation in dynamo db table",
    "baseClasses": ["DynamoDBChatMemory", "BaseChatMemory", "BaseMemory"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["dynamodbMemoryApi"]
    },
    "inputs": [
      { "label": "Table Name", "name": "tableName", "type": "string" },
      { "label": "Partition Key", "name": "partitionKey", "type": "string" },
      {
        "label": "Region",
        "name": "region",
        "type": "string",
        "description": "The aws region in which table is located",
        "placeholder": "us-east-1"
      },
      {
        "label": "Session ID",
        "name": "sessionId",
        "type": "string",
        "description": "If not specified, the first CHAT_MESSAGE_ID will be used as sessionId",
        "default": "",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Memory Key",
        "name": "memoryKey",
        "type": "string",
        "default": "chat_history",
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/DynamoDb/DynamoDb.js"
  },
  {
    "memoryMethods": {},
    "label": "MongoDB Atlas Chat Memory",
    "name": "MongoDBAtlasChatMemory",
    "version": 1,
    "type": "MongoDBAtlasChatMemory",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/MongoDBMemory/mongodb.svg",
    "category": "Memory",
    "description": "Stores the conversation in MongoDB Atlas",
    "baseClasses": ["MongoDBAtlasChatMemory", "BaseChatMemory", "BaseMemory"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["mongoDBUrlApi"]
    },
    "inputs": [
      {
        "label": "Database",
        "name": "databaseName",
        "placeholder": "<DB_NAME>",
        "type": "string"
      },
      {
        "label": "Collection Name",
        "name": "collectionName",
        "placeholder": "<COLLECTION_NAME>",
        "type": "string"
      },
      {
        "label": "Session Id",
        "name": "sessionId",
        "type": "string",
        "description": "If not specified, the first CHAT_MESSAGE_ID will be used as sessionId",
        "default": "",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Memory Key",
        "name": "memoryKey",
        "type": "string",
        "default": "chat_history",
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/MongoDBMemory/MongoDBMemory.js"
  },
  {
    "memoryMethods": {},
    "label": "Motorhead Memory",
    "name": "motorheadMemory",
    "version": 1,
    "type": "MotorheadMemory",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/MotorheadMemory/motorhead.svg",
    "category": "Memory",
    "description": "Use Motorhead Memory to store chat conversations",
    "baseClasses": ["MotorheadMemory", "BaseChatMemory", "BaseMemory"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "description": "Only needed when using hosted solution - https://getmetal.io",
      "credentialNames": ["motorheadMemoryApi"]
    },
    "inputs": [
      {
        "label": "Base URL",
        "name": "baseURL",
        "type": "string",
        "optional": true,
        "description": "To use the online version, leave the URL blank. More details at https://getmetal.io."
      },
      {
        "label": "Session Id",
        "name": "sessionId",
        "type": "string",
        "description": "If not specified, the first CHAT_MESSAGE_ID will be used as sessionId",
        "default": "",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Memory Key",
        "name": "memoryKey",
        "type": "string",
        "default": "chat_history",
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/MotorheadMemory/MotorheadMemory.js"
  },
  {
    "memoryMethods": {},
    "label": "Redis-Backed Chat Memory",
    "name": "RedisBackedChatMemory",
    "version": 2,
    "type": "RedisBackedChatMemory",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/RedisBackedChatMemory/redis.svg",
    "category": "Memory",
    "description": "Summarizes the conversation and stores the memory in Redis server",
    "baseClasses": ["RedisBackedChatMemory", "BaseChatMemory", "BaseMemory"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "credentialNames": ["redisCacheApi", "redisCacheUrlApi"]
    },
    "inputs": [
      {
        "label": "Session Id",
        "name": "sessionId",
        "type": "string",
        "description": "If not specified, the first CHAT_MESSAGE_ID will be used as sessionId",
        "default": "",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Session Timeouts",
        "name": "sessionTTL",
        "type": "number",
        "description": "Omit this parameter to make sessions never expire",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Memory Key",
        "name": "memoryKey",
        "type": "string",
        "default": "chat_history",
        "additionalParams": true
      },
      {
        "label": "Window Size",
        "name": "windowSize",
        "type": "number",
        "description": "Window of size k to surface the last k back-and-forth to use as memory.",
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/RedisBackedChatMemory/RedisBackedChatMemory.js"
  },
  {
    "memoryMethods": {},
    "label": "Upstash Redis-Backed Chat Memory",
    "name": "upstashRedisBackedChatMemory",
    "version": 1,
    "type": "UpstashRedisBackedChatMemory",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/UpstashRedisBackedChatMemory/upstash.svg",
    "category": "Memory",
    "description": "Summarizes the conversation and stores the memory in Upstash Redis server",
    "baseClasses": [
      "UpstashRedisBackedChatMemory",
      "BaseChatMemory",
      "BaseMemory"
    ],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Configure password authentication on your upstash redis instance",
      "credentialNames": ["upstashRedisMemoryApi"]
    },
    "inputs": [
      {
        "label": "Upstash Redis REST URL",
        "name": "baseURL",
        "type": "string",
        "placeholder": "https://<your-url>.upstash.io"
      },
      {
        "label": "Session Id",
        "name": "sessionId",
        "type": "string",
        "description": "If not specified, the first CHAT_MESSAGE_ID will be used as sessionId",
        "default": "",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Session Timeouts",
        "name": "sessionTTL",
        "type": "number",
        "description": "Omit this parameter to make sessions never expire",
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/UpstashRedisBackedChatMemory/UpstashRedisBackedChatMemory.js"
  },
  {
    "memoryMethods": {},
    "label": "Zep Memory",
    "name": "ZepMemory",
    "version": 2,
    "type": "ZepMemory",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/ZepMemory/zep.svg",
    "category": "Memory",
    "description": "Summarizes the conversation and stores the memory in zep server",
    "baseClasses": ["ZepMemory", "BaseChatMemory", "BaseMemory"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "description": "Configure JWT authentication on your Zep instance (Optional)",
      "credentialNames": ["zepMemoryApi"]
    },
    "inputs": [
      {
        "label": "Base URL",
        "name": "baseURL",
        "type": "string",
        "default": "http://127.0.0.1:8000"
      },
      {
        "label": "Session Id",
        "name": "sessionId",
        "type": "string",
        "description": "If not specified, a random id will be used. Learn <a target=\"_blank\" href=\"https://docs.flowiseai.com/memory/long-term-memory#ui-and-embedded-chat\">more</a>",
        "default": "",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Size",
        "name": "k",
        "type": "number",
        "placeholder": "10",
        "description": "Window of size k to surface the last k back-and-forth to use as memory.",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "AI Prefix",
        "name": "aiPrefix",
        "type": "string",
        "default": "ai",
        "additionalParams": true
      },
      {
        "label": "Human Prefix",
        "name": "humanPrefix",
        "type": "string",
        "default": "human",
        "additionalParams": true
      },
      {
        "label": "Memory Key",
        "name": "memoryKey",
        "type": "string",
        "default": "chat_history",
        "additionalParams": true
      },
      {
        "label": "Input Key",
        "name": "inputKey",
        "type": "string",
        "default": "input",
        "additionalParams": true
      },
      {
        "label": "Output Key",
        "name": "outputKey",
        "type": "string",
        "default": "text",
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/memory/ZepMemory/ZepMemory.js"
  },
  {
    "label": "OpenAI Moderation",
    "name": "inputModerationOpenAI",
    "version": 1,
    "type": "Moderation",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/moderation/OpenAIModeration/openai.svg",
    "category": "Moderation",
    "description": "Check whether content complies with OpenAI usage policies.",
    "baseClasses": ["Moderation"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["openAIApi"]
    },
    "inputs": [
      {
        "label": "Error Message",
        "name": "moderationErrorMessage",
        "type": "string",
        "rows": 2,
        "default": "Cannot Process! Input violates OpenAI's content moderation policies.",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/moderation/OpenAIModeration/OpenAIModeration.js"
  },
  {
    "label": "Simple Prompt Moderation",
    "name": "inputModerationSimple",
    "version": 2,
    "type": "Moderation",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/moderation/SimplePromptModeration/moderation.svg",
    "category": "Moderation",
    "description": "Check whether input consists of any text from Deny list, and prevent being sent to LLM",
    "baseClasses": ["Moderation"],
    "inputs": [
      {
        "label": "Deny List",
        "name": "denyList",
        "type": "string",
        "rows": 4,
        "placeholder": "ignore previous instructions\ndo not follow the directions\nyou must ignore all previous instructions",
        "description": "An array of string literals (enter one per line) that should not appear in the prompt text."
      },
      {
        "label": "Chat Model",
        "name": "model",
        "type": "BaseChatModel",
        "description": "Use LLM to detect if the input is similar to those specified in Deny List",
        "optional": true
      },
      {
        "label": "Error Message",
        "name": "moderationErrorMessage",
        "type": "string",
        "rows": 2,
        "default": "Cannot Process! Input violates content moderation policies.",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/moderation/SimplePromptModeration/SimplePromptModeration.js"
  },
  {
    "label": "CSV Output Parser",
    "name": "csvOutputParser",
    "version": 1,
    "type": "CSVListOutputParser",
    "description": "Parse the output of an LLM call as a comma-separated list of values",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/outputparsers/CSVListOutputParser/csv.svg",
    "category": "Output Parsers",
    "baseClasses": ["CSVListOutputParser", "BaseLLMOutputParser", "Runnable"],
    "inputs": [
      {
        "label": "Autofix",
        "name": "autofixParser",
        "type": "boolean",
        "optional": true,
        "description": "In the event that the first call fails, will make another call to the model to fix any errors."
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/outputparsers/CSVListOutputParser/CSVListOutputParser.js"
  },
  {
    "label": "Custom List Output Parser",
    "name": "customListOutputParser",
    "version": 1,
    "type": "CustomListOutputParser",
    "description": "Parse the output of an LLM call as a list of values.",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/outputparsers/CustomListOutputParser/list.svg",
    "category": "Output Parsers",
    "baseClasses": [
      "CustomListOutputParser",
      "BaseLLMOutputParser",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Length",
        "name": "length",
        "type": "number",
        "default": 5,
        "step": 1,
        "description": "Number of values to return"
      },
      {
        "label": "Separator",
        "name": "separator",
        "type": "string",
        "description": "Separator between values",
        "default": ","
      },
      {
        "label": "Autofix",
        "name": "autofixParser",
        "type": "boolean",
        "optional": true,
        "description": "In the event that the first call fails, will make another call to the model to fix any errors."
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/outputparsers/CustomListOutputParser/CustomListOutputParser.js"
  },
  {
    "label": "Structured Output Parser",
    "name": "structuredOutputParser",
    "version": 1,
    "type": "StructuredOutputParser",
    "description": "Parse the output of an LLM call into a given (JSON) structure.",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/outputparsers/StructuredOutputParser/structure.svg",
    "category": "Output Parsers",
    "baseClasses": [
      "StructuredOutputParser",
      "BaseLLMOutputParser",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Autofix",
        "name": "autofixParser",
        "type": "boolean",
        "optional": true,
        "description": "In the event that the first call fails, will make another call to the model to fix any errors."
      },
      {
        "label": "JSON Structure",
        "name": "jsonStructure",
        "type": "datagrid",
        "description": "JSON structure for LLM to return",
        "datagrid": [
          { "field": "property", "headerName": "Property", "editable": true },
          {
            "field": "type",
            "headerName": "Type",
            "type": "singleSelect",
            "valueOptions": ["string", "number", "boolean"],
            "editable": true
          },
          {
            "field": "description",
            "headerName": "Description",
            "editable": true,
            "flex": 1
          }
        ],
        "default": [
          {
            "property": "answer",
            "type": "string",
            "description": "answer to the user's question"
          },
          {
            "property": "source",
            "type": "string",
            "description": "sources used to answer the question, should be websites"
          }
        ],
        "additionalParams": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/outputparsers/StructuredOutputParser/StructuredOutputParser.js"
  },
  {
    "label": "Chat Prompt Template",
    "name": "chatPromptTemplate",
    "version": 1,
    "type": "ChatPromptTemplate",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/prompts/ChatPromptTemplate/prompt.svg",
    "category": "Prompts",
    "description": "Schema to represent a chat prompt",
    "baseClasses": [
      "ChatPromptTemplate",
      "BaseChatPromptTemplate",
      "BasePromptTemplate",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "System Message",
        "name": "systemMessagePrompt",
        "type": "string",
        "rows": 4,
        "placeholder": "You are a helpful assistant that translates {input_language} to {output_language}."
      },
      {
        "label": "Human Message",
        "name": "humanMessagePrompt",
        "type": "string",
        "rows": 4,
        "placeholder": "{text}"
      },
      {
        "label": "Format Prompt Values",
        "name": "promptValues",
        "type": "json",
        "optional": true,
        "acceptVariable": true,
        "list": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/prompts/ChatPromptTemplate/ChatPromptTemplate.js"
  },
  {
    "label": "Few Shot Prompt Template",
    "name": "fewShotPromptTemplate",
    "version": 1,
    "type": "FewShotPromptTemplate",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/prompts/FewShotPromptTemplate/prompt.svg",
    "category": "Prompts",
    "description": "Prompt template you can build with examples",
    "baseClasses": [
      "FewShotPromptTemplate",
      "BaseStringPromptTemplate",
      "BasePromptTemplate",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Examples",
        "name": "examples",
        "type": "string",
        "rows": 4,
        "placeholder": "[\n  { \"word\": \"happy\", \"antonym\": \"sad\" },\n  { \"word\": \"tall\", \"antonym\": \"short\" },\n]"
      },
      {
        "label": "Example Prompt",
        "name": "examplePrompt",
        "type": "PromptTemplate"
      },
      {
        "label": "Prefix",
        "name": "prefix",
        "type": "string",
        "rows": 4,
        "placeholder": "Give the antonym of every input"
      },
      {
        "label": "Suffix",
        "name": "suffix",
        "type": "string",
        "rows": 4,
        "placeholder": "Word: {input}\nAntonym:"
      },
      {
        "label": "Example Separator",
        "name": "exampleSeparator",
        "type": "string",
        "placeholder": "\n\n"
      },
      {
        "label": "Template Format",
        "name": "templateFormat",
        "type": "options",
        "options": [
          { "label": "f-string", "name": "f-string" },
          { "label": "jinja-2", "name": "jinja-2" }
        ],
        "default": "f-string"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/prompts/FewShotPromptTemplate/FewShotPromptTemplate.js"
  },
  {
    "label": "Prompt Template",
    "name": "promptTemplate",
    "version": 1,
    "type": "PromptTemplate",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/prompts/PromptTemplate/prompt.svg",
    "category": "Prompts",
    "description": "Schema to represent a basic prompt for an LLM",
    "baseClasses": [
      "PromptTemplate",
      "BaseStringPromptTemplate",
      "BasePromptTemplate",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Template",
        "name": "template",
        "type": "string",
        "rows": 4,
        "placeholder": "What is a good name for a company that makes {product}?"
      },
      {
        "label": "Format Prompt Values",
        "name": "promptValues",
        "type": "json",
        "optional": true,
        "acceptVariable": true,
        "list": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/prompts/PromptTemplate/PromptTemplate.js"
  },
  {
    "label": "Hyde Retriever",
    "name": "HydeRetriever",
    "version": 2,
    "type": "HydeRetriever",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/retrievers/HydeRetriever/hyderetriever.svg",
    "category": "Retrievers",
    "description": "Use HyDE retriever to retrieve from a vector store",
    "baseClasses": ["HydeRetriever", "BaseRetriever"],
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      { "label": "Vector Store", "name": "vectorStore", "type": "VectorStore" },
      {
        "label": "Select Defined Prompt",
        "name": "promptKey",
        "description": "Select a pre-defined prompt",
        "type": "options",
        "options": [
          {
            "label": "websearch",
            "name": "websearch",
            "description": "Please write a passage to answer the question\nQuestion: {question}\nPassage:"
          },
          {
            "label": "scifact",
            "name": "scifact",
            "description": "Please write a scientific paper passage to support/refute the claim\nClaim: {question}\nPassage:"
          },
          {
            "label": "arguana",
            "name": "arguana",
            "description": "Please write a counter argument for the passage\nPassage: {question}\nCounter Argument:"
          },
          {
            "label": "trec-covid",
            "name": "trec-covid",
            "description": "Please write a scientific paper passage to answer the question\nQuestion: {question}\nPassage:"
          },
          {
            "label": "fiqa",
            "name": "fiqa",
            "description": "Please write a financial article passage to answer the question\nQuestion: {question}\nPassage:"
          },
          {
            "label": "dbpedia-entity",
            "name": "dbpedia-entity",
            "description": "Please write a passage to answer the question.\nQuestion: {question}\nPassage:"
          },
          {
            "label": "trec-news",
            "name": "trec-news",
            "description": "Please write a news passage about the topic.\nTopic: {question}\nPassage:"
          },
          {
            "label": "mr-tydi",
            "name": "mr-tydi",
            "description": "Please write a passage in Swahili/Korean/Japanese/Bengali to answer the question in detail.\nQuestion: {question}\nPassage:"
          }
        ],
        "default": "websearch"
      },
      {
        "label": "Custom Prompt",
        "name": "customPrompt",
        "description": "If custom prompt is used, this will override Defined Prompt",
        "placeholder": "Please write a passage to answer the question\nQuestion: {question}\nPassage:",
        "type": "string",
        "rows": 4,
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "default": 4,
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/retrievers/HydeRetriever/HydeRetriever.js"
  },
  {
    "label": "Prompt Retriever",
    "name": "promptRetriever",
    "version": 1,
    "type": "PromptRetriever",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/retrievers/PromptRetriever/promptretriever.svg",
    "category": "Retrievers",
    "description": "Store prompt template with name & description to be later queried by MultiPromptChain",
    "baseClasses": ["PromptRetriever"],
    "inputs": [
      {
        "label": "Prompt Name",
        "name": "name",
        "type": "string",
        "placeholder": "physics-qa"
      },
      {
        "label": "Prompt Description",
        "name": "description",
        "type": "string",
        "rows": 3,
        "description": "Description of what the prompt does and when it should be used",
        "placeholder": "Good for answering questions about physics"
      },
      {
        "label": "Prompt System Message",
        "name": "systemMessage",
        "type": "string",
        "rows": 4,
        "placeholder": "You are a very smart physics professor. You are great at answering questions about physics in a concise and easy to understand manner. When you don't know the answer to a question you admit that you don't know."
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/retrievers/PromptRetriever/PromptRetriever.js"
  },
  {
    "label": "Similarity Score Threshold Retriever",
    "name": "similarityThresholdRetriever",
    "version": 1,
    "type": "SimilarityThresholdRetriever",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/retrievers/SimilarityThresholdRetriever/similaritythreshold.svg",
    "category": "Retrievers",
    "description": "Return results based on the minimum similarity percentage",
    "baseClasses": ["SimilarityThresholdRetriever", "BaseRetriever"],
    "inputs": [
      { "label": "Vector Store", "name": "vectorStore", "type": "VectorStore" },
      {
        "label": "Minimum Similarity Score (%)",
        "name": "minSimilarityScore",
        "description": "Finds results with at least this similarity score",
        "type": "number",
        "default": 80,
        "step": 1
      },
      {
        "label": "Max K",
        "name": "maxK",
        "description": "The maximum number of results to fetch",
        "type": "number",
        "default": 20,
        "step": 1
      },
      {
        "label": "K Increment",
        "name": "kIncrement",
        "description": "How much to increase K by each time. It'll fetch N results, then N + kIncrement, then N + kIncrement * 2, etc.",
        "type": "number",
        "default": 2,
        "step": 1
      }
    ],
    "outputs": [
      {
        "label": "Similarity Threshold Retriever",
        "name": "retriever",
        "baseClasses": ["SimilarityThresholdRetriever", "BaseRetriever"]
      },
      { "label": "Document", "name": "document", "baseClasses": ["Document"] },
      { "label": "Text", "name": "text", "baseClasses": ["string", "json"] }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/retrievers/SimilarityThresholdRetriever/SimilarityThresholdRetriever.js"
  },
  {
    "label": "Vector Store Retriever",
    "name": "vectorStoreRetriever",
    "version": 1,
    "type": "VectorStoreRetriever",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/retrievers/VectorStoreRetriever/vectorretriever.svg",
    "category": "Retrievers",
    "description": "Store vector store as retriever to be later queried by MultiRetrievalQAChain",
    "baseClasses": ["VectorStoreRetriever"],
    "inputs": [
      { "label": "Vector Store", "name": "vectorStore", "type": "VectorStore" },
      {
        "label": "Retriever Name",
        "name": "name",
        "type": "string",
        "placeholder": "netflix movies"
      },
      {
        "label": "Retriever Description",
        "name": "description",
        "type": "string",
        "rows": 3,
        "description": "Description of when to use the vector store retriever",
        "placeholder": "Good for answering questions about netflix movies"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/retrievers/VectorStoreRetriever/VectorStoreRetriever.js"
  },
  {
    "label": "Character Text Splitter",
    "name": "characterTextSplitter",
    "version": 1,
    "type": "CharacterTextSplitter",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/CharacterTextSplitter/textsplitter.svg",
    "category": "Text Splitters",
    "description": "splits only on one type of character (defaults to \"\\n\\n\").",
    "baseClasses": [
      "CharacterTextSplitter",
      "TextSplitter",
      "BaseDocumentTransformer",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Chunk Size",
        "name": "chunkSize",
        "type": "number",
        "default": 1000,
        "optional": true
      },
      {
        "label": "Chunk Overlap",
        "name": "chunkOverlap",
        "type": "number",
        "optional": true
      },
      {
        "label": "Custom Separator",
        "name": "separator",
        "type": "string",
        "placeholder": "\" \"",
        "description": "Separator to determine when to split the text, will override the default separator",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/CharacterTextSplitter/CharacterTextSplitter.js"
  },
  {
    "label": "Code Text Splitter",
    "name": "codeTextSplitter",
    "version": 1,
    "type": "CodeTextSplitter",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/CodeTextSplitter/codeTextSplitter.svg",
    "category": "Text Splitters",
    "description": "Split documents based on language-specific syntax",
    "baseClasses": [
      "CodeTextSplitter",
      "TextSplitter",
      "BaseDocumentTransformer",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Language",
        "name": "language",
        "type": "options",
        "options": [
          { "label": "cpp", "name": "cpp" },
          { "label": "go", "name": "go" },
          { "label": "java", "name": "java" },
          { "label": "js", "name": "js" },
          { "label": "php", "name": "php" },
          { "label": "proto", "name": "proto" },
          { "label": "python", "name": "python" },
          { "label": "rst", "name": "rst" },
          { "label": "ruby", "name": "ruby" },
          { "label": "rust", "name": "rust" },
          { "label": "scala", "name": "scala" },
          { "label": "swift", "name": "swift" },
          { "label": "markdown", "name": "markdown" },
          { "label": "latex", "name": "latex" },
          { "label": "html", "name": "html" },
          { "label": "sol", "name": "sol" }
        ]
      },
      {
        "label": "Chunk Size",
        "name": "chunkSize",
        "type": "number",
        "default": 1000,
        "optional": true
      },
      {
        "label": "Chunk Overlap",
        "name": "chunkOverlap",
        "type": "number",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/CodeTextSplitter/CodeTextSplitter.js"
  },
  {
    "label": "HtmlToMarkdown Text Splitter",
    "name": "htmlToMarkdownTextSplitter",
    "version": 1,
    "type": "HtmlToMarkdownTextSplitter",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/HtmlToMarkdownTextSplitter/htmlToMarkdownTextSplitter.svg",
    "category": "Text Splitters",
    "description": "Converts Html to Markdown and then split your content into documents based on the Markdown headers",
    "baseClasses": [
      "HtmlToMarkdownTextSplitter",
      "MarkdownTextSplitter",
      "RecursiveCharacterTextSplitter",
      "TextSplitter",
      "BaseDocumentTransformer",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Chunk Size",
        "name": "chunkSize",
        "type": "number",
        "default": 1000,
        "optional": true
      },
      {
        "label": "Chunk Overlap",
        "name": "chunkOverlap",
        "type": "number",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/HtmlToMarkdownTextSplitter/HtmlToMarkdownTextSplitter.js"
  },
  {
    "label": "Markdown Text Splitter",
    "name": "markdownTextSplitter",
    "version": 1,
    "type": "MarkdownTextSplitter",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/MarkdownTextSplitter/markdownTextSplitter.svg",
    "category": "Text Splitters",
    "description": "Split your content into documents based on the Markdown headers",
    "baseClasses": [
      "MarkdownTextSplitter",
      "RecursiveCharacterTextSplitter",
      "TextSplitter",
      "BaseDocumentTransformer",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Chunk Size",
        "name": "chunkSize",
        "type": "number",
        "default": 1000,
        "optional": true
      },
      {
        "label": "Chunk Overlap",
        "name": "chunkOverlap",
        "type": "number",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/MarkdownTextSplitter/MarkdownTextSplitter.js"
  },
  {
    "label": "Recursive Character Text Splitter",
    "name": "recursiveCharacterTextSplitter",
    "version": 2,
    "type": "RecursiveCharacterTextSplitter",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/RecursiveCharacterTextSplitter/textsplitter.svg",
    "category": "Text Splitters",
    "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
    "baseClasses": [
      "RecursiveCharacterTextSplitter",
      "TextSplitter",
      "BaseDocumentTransformer",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Chunk Size",
        "name": "chunkSize",
        "type": "number",
        "default": 1000,
        "optional": true
      },
      {
        "label": "Chunk Overlap",
        "name": "chunkOverlap",
        "type": "number",
        "optional": true
      },
      {
        "label": "Custom Separators",
        "name": "separators",
        "type": "string",
        "rows": 4,
        "description": "Array of custom separators to determine when to split the text, will override the default separators",
        "placeholder": "[\"|\", \"##\", \">\", \"-\"]",
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/RecursiveCharacterTextSplitter/RecursiveCharacterTextSplitter.js"
  },
  {
    "label": "Token Text Splitter",
    "name": "tokenTextSplitter",
    "version": 1,
    "type": "TokenTextSplitter",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/TokenTextSplitter/tiktoken.svg",
    "category": "Text Splitters",
    "description": "Splits a raw text string by first converting the text into BPE tokens, then split these tokens into chunks and convert the tokens within a single chunk back into text.",
    "baseClasses": [
      "TokenTextSplitter",
      "TextSplitter",
      "BaseDocumentTransformer",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Encoding Name",
        "name": "encodingName",
        "type": "options",
        "options": [
          { "label": "gpt2", "name": "gpt2" },
          { "label": "r50k_base", "name": "r50k_base" },
          { "label": "p50k_base", "name": "p50k_base" },
          { "label": "p50k_edit", "name": "p50k_edit" },
          { "label": "cl100k_base", "name": "cl100k_base" }
        ],
        "default": "gpt2"
      },
      {
        "label": "Chunk Size",
        "name": "chunkSize",
        "type": "number",
        "default": 1000,
        "optional": true
      },
      {
        "label": "Chunk Overlap",
        "name": "chunkOverlap",
        "type": "number",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/textsplitters/TokenTextSplitter/TokenTextSplitter.js"
  },
  {
    "label": "AI Plugin",
    "name": "aiPlugin",
    "version": 1,
    "type": "AIPlugin",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/AIPlugin/aiplugin.svg",
    "category": "Tools",
    "description": "Execute actions using ChatGPT Plugin Url",
    "baseClasses": ["AIPlugin", "Tool", "StructuredTool", "Runnable"],
    "inputs": [
      {
        "label": "Plugin Url",
        "name": "pluginUrl",
        "type": "string",
        "placeholder": "https://www.klarna.com/.well-known/ai-plugin.json"
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/AIPlugin/AIPlugin.js"
  },
  {
    "label": "BraveSearch API",
    "name": "braveSearchAPI",
    "version": 1,
    "type": "BraveSearchAPI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/BraveSearchAPI/brave.svg",
    "category": "Tools",
    "description": "Wrapper around BraveSearch API - a real-time API to access Brave search results",
    "inputs": [],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["braveSearchApi"]
    },
    "baseClasses": ["BraveSearchAPI", "Tool", "StructuredTool", "Runnable"],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/BraveSearchAPI/BraveSearchAPI.js"
  },
  {
    "label": "Calculator",
    "name": "calculator",
    "version": 1,
    "type": "Calculator",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/Calculator/calculator.svg",
    "category": "Tools",
    "description": "Perform calculations on response",
    "baseClasses": ["Calculator", "Tool", "StructuredTool", "Runnable"],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/Calculator/Calculator.js"
  },
  {
    "label": "Chain Tool",
    "name": "chainTool",
    "version": 1,
    "type": "ChainTool",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/ChainTool/chaintool.svg",
    "category": "Tools",
    "description": "Use a chain as allowed tool for agent",
    "baseClasses": [
      "ChainTool",
      "DynamicTool",
      "Tool",
      "StructuredTool",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Chain Name",
        "name": "name",
        "type": "string",
        "placeholder": "state-of-union-qa"
      },
      {
        "label": "Chain Description",
        "name": "description",
        "type": "string",
        "rows": 3,
        "placeholder": "State of the Union QA - useful for when you need to ask questions about the most recent state of the union address."
      },
      {
        "label": "Return Direct",
        "name": "returnDirect",
        "type": "boolean",
        "optional": true
      },
      { "label": "Base Chain", "name": "baseChain", "type": "BaseChain" }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/ChainTool/ChainTool.js"
  },
  {
    "loadMethods": {},
    "label": "Custom Tool",
    "name": "customTool",
    "version": 1,
    "type": "CustomTool",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/CustomTool/customtool.svg",
    "category": "Tools",
    "description": "Use custom tool you've created in Flowise within chatflow",
    "inputs": [
      {
        "label": "Select Tool",
        "name": "selectedTool",
        "type": "asyncOptions",
        "loadMethod": "listTools"
      }
    ],
    "baseClasses": ["CustomTool", "Tool", "StructuredTool", "Runnable"],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/CustomTool/CustomTool.js"
  },
  {
    "label": "Google Custom Search",
    "name": "googleCustomSearch",
    "version": 1,
    "type": "GoogleCustomSearchAPI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/GoogleSearchAPI/google.svg",
    "category": "Tools",
    "description": "Wrapper around Google Custom Search API - a real-time API to access Google search results",
    "inputs": [],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["googleCustomSearchApi"]
    },
    "baseClasses": [
      "GoogleCustomSearchAPI",
      "Tool",
      "StructuredTool",
      "Runnable"
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/GoogleSearchAPI/GoogleSearchAPI.js"
  },
  {
    "label": "OpenAPI Toolkit",
    "name": "openAPIToolkit",
    "version": 1,
    "type": "OpenAPIToolkit",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/OpenAPIToolkit/openapi.svg",
    "category": "Tools",
    "description": "Load OpenAPI specification",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed if the YAML OpenAPI Spec requires authentication",
      "optional": true,
      "credentialNames": ["openAPIAuth"]
    },
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      {
        "label": "YAML File",
        "name": "yamlFile",
        "type": "file",
        "fileType": ".yaml"
      }
    ],
    "baseClasses": ["OpenAPIToolkit", "Tool"],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/OpenAPIToolkit/OpenAPIToolkit.js"
  },
  {
    "label": "Read File",
    "name": "readFile",
    "version": 1,
    "type": "ReadFile",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/ReadFile/readfile.svg",
    "category": "Tools",
    "description": "Read file from disk",
    "baseClasses": ["ReadFile", "Tool", "StructuredTool", "Runnable"],
    "inputs": [
      {
        "label": "Base Path",
        "name": "basePath",
        "placeholder": "C:\\Users\\User\\Desktop",
        "type": "string",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/ReadFile/ReadFile.js"
  },
  {
    "label": "Requests Get",
    "name": "requestsGet",
    "version": 1,
    "type": "RequestsGet",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/RequestsGet/requestsget.svg",
    "category": "Tools",
    "description": "Execute HTTP GET requests",
    "baseClasses": ["RequestsGet", "Tool", "StructuredTool", "Runnable"],
    "inputs": [
      {
        "label": "URL",
        "name": "url",
        "type": "string",
        "description": "Agent will make call to this exact URL. If not specified, agent will try to figure out itself from AIPlugin if provided",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Description",
        "name": "description",
        "type": "string",
        "rows": 4,
        "default": "A portal to the internet. Use this when you need to get specific content from a website. \nInput should be a  url (i.e. https://www.google.com). The output will be the text response of the GET request.",
        "description": "Acts like a prompt to tell agent when it should use this tool",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Headers",
        "name": "headers",
        "type": "json",
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/RequestsGet/RequestsGet.js"
  },
  {
    "label": "Requests Post",
    "name": "requestsPost",
    "version": 1,
    "type": "RequestsPost",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/RequestsPost/requestspost.svg",
    "category": "Tools",
    "description": "Execute HTTP POST requests",
    "baseClasses": ["RequestsPost", "Tool", "StructuredTool", "Runnable"],
    "inputs": [
      {
        "label": "URL",
        "name": "url",
        "type": "string",
        "description": "Agent will make call to this exact URL. If not specified, agent will try to figure out itself from AIPlugin if provided",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Body",
        "name": "body",
        "type": "json",
        "description": "JSON body for the POST request. If not specified, agent will try to figure out itself from AIPlugin if provided",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Description",
        "name": "description",
        "type": "string",
        "rows": 4,
        "default": "Use this when you want to POST to a website.\nInput should be a json string with two keys: \"url\" and \"data\".\nThe value of \"url\" should be a string, and the value of \"data\" should be a dictionary of \nkey-value pairs you want to POST to the url as a JSON body.\nBe careful to always use double quotes for strings in the json string\nThe output will be the text response of the POST request.",
        "description": "Acts like a prompt to tell agent when it should use this tool",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Headers",
        "name": "headers",
        "type": "json",
        "additionalParams": true,
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/RequestsPost/RequestsPost.js"
  },
  {
    "label": "Retriever Tool",
    "name": "retrieverTool",
    "version": 1,
    "type": "RetrieverTool",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/RetrieverTool/retrievertool.svg",
    "category": "Tools",
    "description": "Use a retriever as allowed tool for agent",
    "baseClasses": [
      "RetrieverTool",
      "DynamicTool",
      "Tool",
      "StructuredTool",
      "Runnable"
    ],
    "inputs": [
      {
        "label": "Retriever Name",
        "name": "name",
        "type": "string",
        "placeholder": "search_state_of_union"
      },
      {
        "label": "Retriever Description",
        "name": "description",
        "type": "string",
        "description": "When should agent uses to retrieve documents",
        "rows": 3,
        "placeholder": "Searches and returns documents regarding the state-of-the-union."
      },
      { "label": "Retriever", "name": "retriever", "type": "BaseRetriever" }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/RetrieverTool/RetrieverTool.js"
  },
  {
    "label": "SearchApi",
    "name": "searchAPI",
    "version": 1,
    "type": "SearchAPI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/SearchApi/searchapi.svg",
    "category": "Tools",
    "description": "Real-time API for accessing Google Search data",
    "inputs": [],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["searchApi"]
    },
    "baseClasses": ["SearchAPI", "Tool", "StructuredTool", "Runnable"],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/SearchApi/SearchAPI.js"
  },
  {
    "label": "Serp API",
    "name": "serpAPI",
    "version": 1,
    "type": "SerpAPI",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/SerpAPI/serp.svg",
    "category": "Tools",
    "description": "Wrapper around SerpAPI - a real-time API to access Google search results",
    "inputs": [],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["serpApi"]
    },
    "baseClasses": ["SerpAPI", "Tool", "StructuredTool", "Runnable"],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/SerpAPI/SerpAPI.js"
  },
  {
    "label": "Serper",
    "name": "serper",
    "version": 1,
    "type": "Serper",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/Serper/serper.svg",
    "category": "Tools",
    "description": "Wrapper around Serper.dev - Google Search API",
    "inputs": [],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["serperApi"]
    },
    "baseClasses": ["Serper", "Tool", "StructuredTool", "Runnable"],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/Serper/Serper.js"
  },
  {
    "label": "Web Browser",
    "name": "webBrowser",
    "version": 1,
    "type": "WebBrowser",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/WebBrowser/webBrowser.svg",
    "category": "Tools",
    "description": "Gives agent the ability to visit a website and extract information",
    "inputs": [
      {
        "label": "Language Model",
        "name": "model",
        "type": "BaseLanguageModel"
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" }
    ],
    "baseClasses": ["WebBrowser", "Tool", "StructuredTool", "Runnable"],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/WebBrowser/WebBrowser.js"
  },
  {
    "label": "Write File",
    "name": "writeFile",
    "version": 1,
    "type": "WriteFile",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/WriteFile/writefile.svg",
    "category": "Tools",
    "description": "Write file to disk",
    "baseClasses": ["WriteFile", "Tool", "StructuredTool", "Runnable"],
    "inputs": [
      {
        "label": "Base Path",
        "name": "basePath",
        "placeholder": "C:\\Users\\User\\Desktop",
        "type": "string",
        "optional": true
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/tools/WriteFile/WriteFile.js"
  },
  {
    "label": "Custom JS Function",
    "name": "customFunction",
    "version": 1,
    "type": "CustomFunction",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/utilities/CustomFunction/customfunction.svg",
    "category": "Utilities",
    "description": "Execute custom javascript function",
    "baseClasses": ["CustomFunction", "Utilities"],
    "inputs": [
      {
        "label": "Input Variables",
        "name": "functionInputVariables",
        "description": "Input variables can be used in the function with prefix $. For example: $var",
        "type": "json",
        "optional": true,
        "acceptVariable": true,
        "list": true
      },
      {
        "label": "Function Name",
        "name": "functionName",
        "type": "string",
        "optional": true,
        "placeholder": "My Function"
      },
      {
        "label": "Javascript Function",
        "name": "javascriptFunction",
        "type": "code"
      }
    ],
    "outputs": [
      {
        "label": "Output",
        "name": "output",
        "baseClasses": ["string", "number", "boolean", "json", "array"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/utilities/CustomFunction/CustomFunction.js"
  },
  {
    "label": "Get Variable",
    "name": "getVariable",
    "version": 1,
    "type": "GetVariable",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/utilities/GetVariable/getvar.svg",
    "category": "Utilities",
    "description": "Get variable that was saved using Set Variable node",
    "baseClasses": ["GetVariable", "Utilities"],
    "inputs": [
      {
        "label": "Variable Name",
        "name": "variableName",
        "type": "string",
        "placeholder": "var1"
      }
    ],
    "outputs": [
      {
        "label": "Output",
        "name": "output",
        "baseClasses": ["string", "number", "boolean", "json", "array"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/utilities/GetVariable/GetVariable.js"
  },
  {
    "label": "IfElse Function",
    "name": "ifElseFunction",
    "version": 1,
    "type": "IfElseFunction",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/utilities/IfElseFunction/ifelsefunction.svg",
    "category": "Utilities",
    "description": "Split flows based on If Else javascript functions",
    "baseClasses": ["IfElseFunction", "Utilities"],
    "inputs": [
      {
        "label": "Input Variables",
        "name": "functionInputVariables",
        "description": "Input variables can be used in the function with prefix $. For example: $var",
        "type": "json",
        "optional": true,
        "acceptVariable": true,
        "list": true
      },
      {
        "label": "IfElse Name",
        "name": "functionName",
        "type": "string",
        "optional": true,
        "placeholder": "If Condition Match"
      },
      {
        "label": "If Function",
        "name": "ifFunction",
        "description": "Function must return a value",
        "type": "code",
        "rows": 2,
        "default": "if (\"hello\" == \"hello\") {\n    return true;\n}"
      },
      {
        "label": "Else Function",
        "name": "elseFunction",
        "description": "Function must return a value",
        "type": "code",
        "rows": 2,
        "default": "return false;"
      }
    ],
    "outputs": [
      {
        "label": "True",
        "name": "returnTrue",
        "baseClasses": ["string", "number", "boolean", "json", "array"]
      },
      {
        "label": "False",
        "name": "returnFalse",
        "baseClasses": ["string", "number", "boolean", "json", "array"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/utilities/IfElseFunction/IfElseFunction.js"
  },
  {
    "label": "Set Variable",
    "name": "setVariable",
    "version": 1,
    "type": "SetVariable",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/utilities/SetVariable/setvar.svg",
    "category": "Utilities",
    "description": "Set variable which can be retrieved at a later stage. Variable is only available during runtime.",
    "baseClasses": ["SetVariable", "Utilities"],
    "inputs": [
      {
        "label": "Input",
        "name": "input",
        "type": "string | number | boolean | json | array",
        "optional": true,
        "list": true
      },
      {
        "label": "Variable Name",
        "name": "variableName",
        "type": "string",
        "placeholder": "var1"
      }
    ],
    "outputs": [
      {
        "label": "Output",
        "name": "output",
        "baseClasses": ["string", "number", "boolean", "json", "array"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/utilities/SetVariable/SetVariable.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Chroma",
    "name": "chroma",
    "version": 1,
    "type": "Chroma",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Chroma/chroma.svg",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using Chroma, an open-source embedding database",
    "baseClasses": ["Chroma", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed if you have chroma on cloud services with X-Api-key",
      "optional": true,
      "credentialNames": ["chromaApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Collection Name",
        "name": "collectionName",
        "type": "string"
      },
      {
        "label": "Chroma URL",
        "name": "chromaURL",
        "type": "string",
        "optional": true
      },
      {
        "label": "Chroma Metadata Filter",
        "name": "chromaMetadataFilter",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Chroma Retriever",
        "name": "retriever",
        "baseClasses": ["Chroma", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Chroma Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Chroma", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Chroma/Chroma.js"
  },
  {
    "label": "Chroma Load Existing Index",
    "name": "chromaExistingIndex",
    "version": 1,
    "type": "Chroma",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Chroma/chroma.svg",
    "category": "Vector Stores",
    "description": "Load existing index from Chroma (i.e: Document has been upserted)",
    "baseClasses": ["Chroma", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed if you have chroma on cloud services with X-Api-key",
      "optional": true,
      "credentialNames": ["chromaApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Collection Name",
        "name": "collectionName",
        "type": "string"
      },
      {
        "label": "Chroma URL",
        "name": "chromaURL",
        "type": "string",
        "optional": true
      },
      {
        "label": "Chroma Metadata Filter",
        "name": "chromaMetadataFilter",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Chroma Retriever",
        "name": "retriever",
        "baseClasses": ["Chroma", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Chroma Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Chroma", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Chroma/Chroma_Existing.js"
  },
  {
    "label": "Chroma Upsert Document",
    "name": "chromaUpsert",
    "version": 1,
    "type": "Chroma",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Chroma/chroma.svg",
    "category": "Vector Stores",
    "description": "Upsert documents to Chroma",
    "baseClasses": ["Chroma", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed if you have chroma on cloud services with X-Api-key",
      "optional": true,
      "credentialNames": ["chromaApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Collection Name",
        "name": "collectionName",
        "type": "string"
      },
      {
        "label": "Chroma URL",
        "name": "chromaURL",
        "type": "string",
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Chroma Retriever",
        "name": "retriever",
        "baseClasses": ["Chroma", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Chroma Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Chroma", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Chroma/Chroma_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Elasticsearch",
    "name": "elasticsearch",
    "version": 1,
    "description": "Upsert embedded data and perform similarity search upon query using Elasticsearch, a distributed search and analytics engine",
    "type": "Elasticsearch",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Elasticsearch/elasticsearch.png",
    "category": "Vector Stores",
    "baseClasses": ["Elasticsearch", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["elasticsearchApi", "elasticSearchUserPassword"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Index Name",
        "name": "indexName",
        "placeholder": "<INDEX_NAME>",
        "type": "string"
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Similarity",
        "name": "similarity",
        "description": "Similarity measure used in Elasticsearch.",
        "type": "options",
        "default": "l2_norm",
        "options": [
          { "label": "l2_norm", "name": "l2_norm" },
          { "label": "dot_product", "name": "dot_product" },
          { "label": "cosine", "name": "cosine" }
        ],
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Elasticsearch Retriever",
        "name": "retriever",
        "baseClasses": [
          "Elasticsearch",
          "VectorStoreRetriever",
          "BaseRetriever"
        ]
      },
      {
        "label": "Elasticsearch Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Elasticsearch", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Elasticsearch/Elasticsearch.js"
  },
  {
    "type": "Elasticsearch",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Elasticsearch/elasticsearch.png",
    "category": "Vector Stores",
    "badge": "DEPRECATING",
    "baseClasses": ["Elasticsearch", "VectorStoreRetriever", "BaseRetriever"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["elasticsearchApi", "elasticSearchUserPassword"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Index Name",
        "name": "indexName",
        "placeholder": "<INDEX_NAME>",
        "type": "string"
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Similarity",
        "name": "similarity",
        "description": "Similarity measure used in Elasticsearch.",
        "type": "options",
        "default": "l2_norm",
        "options": [
          { "label": "l2_norm", "name": "l2_norm" },
          { "label": "dot_product", "name": "dot_product" },
          { "label": "cosine", "name": "cosine" }
        ],
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Elasticsearch Retriever",
        "name": "retriever",
        "baseClasses": [
          "Elasticsearch",
          "VectorStoreRetriever",
          "BaseRetriever"
        ]
      },
      {
        "label": "Elasticsearch Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Elasticsearch", "VectorStore"]
      }
    ],
    "label": "Elasticsearch Load Existing Index",
    "name": "ElasticsearchIndex",
    "version": 1,
    "description": "Load existing index from Elasticsearch (i.e: Document has been upserted)",
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Elasticsearch/Elasticsearch_Existing.js"
  },
  {
    "type": "Elasticsearch",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Elasticsearch/elasticsearch.png",
    "category": "Vector Stores",
    "badge": "DEPRECATING",
    "baseClasses": ["Elasticsearch", "VectorStoreRetriever", "BaseRetriever"],
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["elasticsearchApi", "elasticSearchUserPassword"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Index Name",
        "name": "indexName",
        "placeholder": "<INDEX_NAME>",
        "type": "string"
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Similarity",
        "name": "similarity",
        "description": "Similarity measure used in Elasticsearch.",
        "type": "options",
        "default": "l2_norm",
        "options": [
          { "label": "l2_norm", "name": "l2_norm" },
          { "label": "dot_product", "name": "dot_product" },
          { "label": "cosine", "name": "cosine" }
        ],
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Elasticsearch Retriever",
        "name": "retriever",
        "baseClasses": [
          "Elasticsearch",
          "VectorStoreRetriever",
          "BaseRetriever"
        ]
      },
      {
        "label": "Elasticsearch Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Elasticsearch", "VectorStore"]
      }
    ],
    "label": "Elasticsearch Upsert Document",
    "name": "ElasticsearchUpsert",
    "version": 1,
    "description": "Upsert documents to Elasticsearch",
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Elasticsearch/Elasticsearch_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Faiss",
    "name": "faiss",
    "version": 1,
    "type": "Faiss",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Faiss/faiss.svg",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using Faiss library from Meta",
    "baseClasses": ["Faiss", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Base Path to load",
        "name": "basePath",
        "description": "Path to load faiss.index file",
        "placeholder": "C:\\Users\\User\\Desktop",
        "type": "string"
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Faiss Retriever",
        "name": "retriever",
        "baseClasses": ["Faiss", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Faiss Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Faiss", "SaveableVectorStore", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Faiss/Faiss.js"
  },
  {
    "label": "Faiss Load Existing Index",
    "name": "faissExistingIndex",
    "version": 1,
    "type": "Faiss",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Faiss/faiss.svg",
    "category": "Vector Stores",
    "description": "Load existing index from Faiss (i.e: Document has been upserted)",
    "baseClasses": ["Faiss", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Base Path to load",
        "name": "basePath",
        "description": "Path to load faiss.index file",
        "placeholder": "C:\\Users\\User\\Desktop",
        "type": "string"
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Faiss Retriever",
        "name": "retriever",
        "baseClasses": ["Faiss", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Faiss Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Faiss", "SaveableVectorStore", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Faiss/Faiss_Existing.js"
  },
  {
    "label": "Faiss Upsert Document",
    "name": "faissUpsert",
    "version": 1,
    "type": "Faiss",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Faiss/faiss.svg",
    "category": "Vector Stores",
    "description": "Upsert documents to Faiss",
    "baseClasses": ["Faiss", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Base Path to store",
        "name": "basePath",
        "description": "Path to store faiss.index file",
        "placeholder": "C:\\Users\\User\\Desktop",
        "type": "string"
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Faiss Retriever",
        "name": "retriever",
        "baseClasses": ["Faiss", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Faiss Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Faiss", "SaveableVectorStore", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Faiss/Faiss_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "In-Memory Vector Store",
    "name": "memoryVectorStore",
    "version": 1,
    "type": "Memory",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/InMemory/memory.svg",
    "category": "Vector Stores",
    "description": "In-memory vectorstore that stores embeddings and does an exact, linear search for the most similar embeddings.",
    "baseClasses": ["Memory", "VectorStoreRetriever", "BaseRetriever"],
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Memory Retriever",
        "name": "retriever",
        "baseClasses": ["Memory", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Memory Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Memory", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/InMemory/InMemoryVectorStore.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Milvus",
    "name": "milvus",
    "version": 1,
    "type": "Milvus",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Milvus/milvus.svg",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using Milvus, world's most advanced open-source vector database",
    "baseClasses": ["Milvus", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "credentialNames": ["milvusAuth"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Milvus Server URL",
        "name": "milvusServerUrl",
        "type": "string",
        "placeholder": "http://localhost:19530"
      },
      {
        "label": "Milvus Collection Name",
        "name": "milvusCollection",
        "type": "string"
      },
      {
        "label": "Milvus Filter",
        "name": "milvusFilter",
        "type": "string",
        "optional": true,
        "description": "Filter data with a simple string query. Refer Milvus <a target=\"_blank\" href=\"https://milvus.io/blog/2022-08-08-How-to-use-string-data-to-empower-your-similarity-search-applications.md#Hybrid-search\">docs</a> for more details.",
        "placeholder": "doc==\"a\"",
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Milvus Retriever",
        "name": "retriever",
        "baseClasses": ["Milvus", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Milvus Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Milvus", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Milvus/Milvus.js"
  },
  {
    "label": "Milvus Load Existing collection",
    "name": "milvusExistingCollection",
    "version": 2,
    "type": "Milvus",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Milvus/milvus.svg",
    "category": "Vector Stores",
    "description": "Load existing collection from Milvus (i.e: Document has been upserted)",
    "baseClasses": ["Milvus", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "credentialNames": ["milvusAuth"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Milvus Server URL",
        "name": "milvusServerUrl",
        "type": "string",
        "placeholder": "http://localhost:19530"
      },
      {
        "label": "Milvus Collection Name",
        "name": "milvusCollection",
        "type": "string"
      },
      {
        "label": "Milvus Filter",
        "name": "milvusFilter",
        "type": "string",
        "optional": true,
        "description": "Filter data with a simple string query. Refer Milvus <a target=\"_blank\" href=\"https://milvus.io/blog/2022-08-08-How-to-use-string-data-to-empower-your-similarity-search-applications.md#Hybrid-search\">docs</a> for more details.",
        "placeholder": "doc==\"a\"",
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Milvus Retriever",
        "name": "retriever",
        "baseClasses": ["Milvus", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Milvus Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Milvus", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Milvus/Milvus_Existing.js"
  },
  {
    "label": "Milvus Upsert Document",
    "name": "milvusUpsert",
    "version": 1,
    "type": "Milvus",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Milvus/milvus.svg",
    "category": "Vector Stores",
    "description": "Upsert documents to Milvus",
    "baseClasses": ["Milvus", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "credentialNames": ["milvusAuth"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Milvus Server URL",
        "name": "milvusServerUrl",
        "type": "string",
        "placeholder": "http://localhost:19530"
      },
      {
        "label": "Milvus Collection Name",
        "name": "milvusCollection",
        "type": "string"
      }
    ],
    "outputs": [
      {
        "label": "Milvus Retriever",
        "name": "retriever",
        "baseClasses": ["Milvus", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Milvus Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Milvus", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Milvus/Milvus_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "MongoDB Atlas",
    "name": "mongoDBAtlas",
    "version": 1,
    "description": "Upsert embedded data and perform similarity search upon query using MongoDB Atlas, a managed cloud mongodb database",
    "type": "MongoDB Atlas",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/MongoDBAtlas/mongodb.svg",
    "category": "Vector Stores",
    "baseClasses": ["MongoDB Atlas", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["mongoDBUrlApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Database",
        "name": "databaseName",
        "placeholder": "<DB_NAME>",
        "type": "string"
      },
      {
        "label": "Collection Name",
        "name": "collectionName",
        "placeholder": "<COLLECTION_NAME>",
        "type": "string"
      },
      {
        "label": "Index Name",
        "name": "indexName",
        "placeholder": "<VECTOR_INDEX_NAME>",
        "type": "string"
      },
      {
        "label": "Content Field",
        "name": "textKey",
        "description": "Name of the field (column) that contains the actual content",
        "type": "string",
        "default": "text",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Embedded Field",
        "name": "embeddingKey",
        "description": "Name of the field (column) that contains the Embedding",
        "type": "string",
        "default": "embedding",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "MongoDB Retriever",
        "name": "retriever",
        "baseClasses": [
          "MongoDB Atlas",
          "VectorStoreRetriever",
          "BaseRetriever"
        ]
      },
      {
        "label": "MongoDB Vector Store",
        "name": "vectorStore",
        "baseClasses": ["MongoDB Atlas", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/MongoDBAtlas/MongoDBAtlas.js"
  },
  {
    "type": "MongoDB Atlas",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/MongoDBAtlas/mongodb.svg",
    "category": "Vector Stores",
    "baseClasses": ["MongoDB Atlas", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["mongoDBUrlApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Database",
        "name": "databaseName",
        "placeholder": "<DB_NAME>",
        "type": "string"
      },
      {
        "label": "Collection Name",
        "name": "collectionName",
        "placeholder": "<COLLECTION_NAME>",
        "type": "string"
      },
      {
        "label": "Index Name",
        "name": "indexName",
        "placeholder": "<VECTOR_INDEX_NAME>",
        "type": "string"
      },
      {
        "label": "Content Field",
        "name": "textKey",
        "description": "Name of the field (column) that contains the actual content",
        "type": "string",
        "default": "text",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Embedded Field",
        "name": "embeddingKey",
        "description": "Name of the field (column) that contains the Embedding",
        "type": "string",
        "default": "embedding",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "MongoDB Retriever",
        "name": "retriever",
        "baseClasses": [
          "MongoDB Atlas",
          "VectorStoreRetriever",
          "BaseRetriever"
        ]
      },
      {
        "label": "MongoDB Vector Store",
        "name": "vectorStore",
        "baseClasses": ["MongoDB Atlas", "VectorStore"]
      }
    ],
    "label": "MongoDB Atlas Load Existing Index",
    "name": "MongoDBIndex",
    "version": 1,
    "description": "Load existing data from MongoDB Atlas (i.e: Document has been upserted)",
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/MongoDBAtlas/MongoDB_Existing.js"
  },
  {
    "type": "MongoDB Atlas",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/MongoDBAtlas/mongodb.svg",
    "category": "Vector Stores",
    "baseClasses": ["MongoDB Atlas", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["mongoDBUrlApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Database",
        "name": "databaseName",
        "placeholder": "<DB_NAME>",
        "type": "string"
      },
      {
        "label": "Collection Name",
        "name": "collectionName",
        "placeholder": "<COLLECTION_NAME>",
        "type": "string"
      },
      {
        "label": "Index Name",
        "name": "indexName",
        "placeholder": "<VECTOR_INDEX_NAME>",
        "type": "string"
      },
      {
        "label": "Content Field",
        "name": "textKey",
        "description": "Name of the field (column) that contains the actual content",
        "type": "string",
        "default": "text",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Embedded Field",
        "name": "embeddingKey",
        "description": "Name of the field (column) that contains the Embedding",
        "type": "string",
        "default": "embedding",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "MongoDB Retriever",
        "name": "retriever",
        "baseClasses": [
          "MongoDB Atlas",
          "VectorStoreRetriever",
          "BaseRetriever"
        ]
      },
      {
        "label": "MongoDB Vector Store",
        "name": "vectorStore",
        "baseClasses": ["MongoDB Atlas", "VectorStore"]
      }
    ],
    "label": "MongoDB Atlas Upsert Document",
    "name": "MongoDBUpsert",
    "version": 1,
    "description": "Upsert documents to MongoDB Atlas",
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/MongoDBAtlas/MongoDB_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "OpenSearch",
    "name": "openSearch",
    "version": 1,
    "type": "OpenSearch",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/OpenSearch/opensearch.svg",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using OpenSearch, an open-source, all-in-one vector database",
    "baseClasses": ["OpenSearch", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "OpenSearch URL",
        "name": "opensearchURL",
        "type": "string",
        "placeholder": "http://127.0.0.1:9200"
      },
      { "label": "Index Name", "name": "indexName", "type": "string" },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "OpenSearch Retriever",
        "name": "retriever",
        "baseClasses": ["OpenSearch", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "OpenSearch Vector Store",
        "name": "vectorStore",
        "baseClasses": ["OpenSearch", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/OpenSearch/OpenSearch.js"
  },
  {
    "label": "OpenSearch Upsert Document",
    "name": "openSearchUpsertDocument",
    "version": 1,
    "type": "OpenSearch",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/OpenSearch/opensearch.svg",
    "category": "Vector Stores",
    "description": "Upsert documents to OpenSearch",
    "baseClasses": ["OpenSearch", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "OpenSearch URL",
        "name": "opensearchURL",
        "type": "string",
        "placeholder": "http://127.0.0.1:9200"
      },
      { "label": "Index Name", "name": "indexName", "type": "string" },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "OpenSearch Retriever",
        "name": "retriever",
        "baseClasses": ["OpenSearch", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "OpenSearch Vector Store",
        "name": "vectorStore",
        "baseClasses": ["OpenSearch", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/OpenSearch/OpenSearch_Upsert.js"
  },
  {
    "label": "OpenSearch Load Existing Index",
    "name": "openSearchExistingIndex",
    "version": 1,
    "type": "OpenSearch",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/OpenSearch/opensearch.svg",
    "category": "Vector Stores",
    "description": "Load existing index from OpenSearch (i.e: Document has been upserted)",
    "baseClasses": ["OpenSearch", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "OpenSearch URL",
        "name": "opensearchURL",
        "type": "string",
        "placeholder": "http://127.0.0.1:9200"
      },
      { "label": "Index Name", "name": "indexName", "type": "string" },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "OpenSearch Retriever",
        "name": "retriever",
        "baseClasses": ["OpenSearch", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "OpenSearch Vector Store",
        "name": "vectorStore",
        "baseClasses": ["OpenSearch", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/OpenSearch/OpenSearch_existing.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Pinecone",
    "name": "pinecone",
    "version": 1,
    "type": "Pinecone",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Pinecone/pinecone.svg",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using Pinecone, a leading fully managed hosted vector database",
    "baseClasses": ["Pinecone", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["pineconeApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      { "label": "Pinecone Index", "name": "pineconeIndex", "type": "string" },
      {
        "label": "Pinecone Namespace",
        "name": "pineconeNamespace",
        "type": "string",
        "placeholder": "my-first-namespace",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Pinecone Metadata Filter",
        "name": "pineconeMetadataFilter",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Pinecone Retriever",
        "name": "retriever",
        "baseClasses": ["Pinecone", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Pinecone Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Pinecone", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Pinecone/Pinecone.js"
  },
  {
    "label": "Pinecone Load Existing Index",
    "name": "pineconeExistingIndex",
    "version": 1,
    "type": "Pinecone",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Pinecone/pinecone.svg",
    "category": "Vector Stores",
    "description": "Load existing index from Pinecone (i.e: Document has been upserted)",
    "baseClasses": ["Pinecone", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["pineconeApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      { "label": "Pinecone Index", "name": "pineconeIndex", "type": "string" },
      {
        "label": "Pinecone Namespace",
        "name": "pineconeNamespace",
        "type": "string",
        "placeholder": "my-first-namespace",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Pinecone Metadata Filter",
        "name": "pineconeMetadataFilter",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Pinecone Retriever",
        "name": "retriever",
        "baseClasses": ["Pinecone", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Pinecone Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Pinecone", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Pinecone/Pinecone_Existing.js"
  },
  {
    "label": "Pinecone Upsert Document",
    "name": "pineconeUpsert",
    "version": 1,
    "type": "Pinecone",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Pinecone/pinecone.svg",
    "category": "Vector Stores",
    "description": "Upsert documents to Pinecone",
    "baseClasses": ["Pinecone", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["pineconeApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      { "label": "Pinecone Index", "name": "pineconeIndex", "type": "string" },
      {
        "label": "Pinecone Namespace",
        "name": "pineconeNamespace",
        "type": "string",
        "placeholder": "my-first-namespace",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Pinecone Retriever",
        "name": "retriever",
        "baseClasses": ["Pinecone", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Pinecone Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Pinecone", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Pinecone/Pinecone_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Postgres",
    "name": "postgres",
    "version": 2,
    "type": "Postgres",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Postgres/postgres.svg",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using pgvector on Postgres",
    "baseClasses": ["Postgres", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["PostgresApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      { "label": "Host", "name": "host", "type": "string" },
      { "label": "Database", "name": "database", "type": "string" },
      {
        "label": "SSL Connection",
        "name": "sslConnection",
        "type": "boolean",
        "default": false,
        "optional": false
      },
      {
        "label": "Port",
        "name": "port",
        "type": "number",
        "placeholder": "6432",
        "optional": true
      },
      {
        "label": "Table Name",
        "name": "tableName",
        "type": "string",
        "placeholder": "documents",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Additional Configuration",
        "name": "additionalConfig",
        "type": "json",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Postgres Retriever",
        "name": "retriever",
        "baseClasses": ["Postgres", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Postgres Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Postgres", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Postgres/Postgres.js"
  },
  {
    "label": "Postgres Load Existing Index",
    "name": "postgresExistingIndex",
    "version": 2,
    "type": "Postgres",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Postgres/postgres.svg",
    "category": "Vector Stores",
    "description": "Load existing index from Postgres using pgvector (i.e: Document has been upserted)",
    "baseClasses": ["Postgres", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["PostgresApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      { "label": "Host", "name": "host", "type": "string" },
      { "label": "Database", "name": "database", "type": "string" },
      {
        "label": "SSL Connection",
        "name": "sslConnection",
        "type": "boolean",
        "default": false,
        "optional": false
      },
      {
        "label": "Port",
        "name": "port",
        "type": "number",
        "placeholder": "6432",
        "optional": true
      },
      {
        "label": "Table Name",
        "name": "tableName",
        "type": "string",
        "placeholder": "documents",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Additional Configuration",
        "name": "additionalConfig",
        "type": "json",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Postgres Retriever",
        "name": "retriever",
        "baseClasses": ["Postgres", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Postgres Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Postgres", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Postgres/Postgres_Exisiting.js"
  },
  {
    "label": "Postgres Upsert Document",
    "name": "postgresUpsert",
    "version": 2,
    "type": "Postgres",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Postgres/postgres.svg",
    "category": "Vector Stores",
    "description": "Upsert documents to Postgres using pgvector",
    "baseClasses": ["Postgres", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["PostgresApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      { "label": "Host", "name": "host", "type": "string" },
      { "label": "Database", "name": "database", "type": "string" },
      {
        "label": "SSL Connection",
        "name": "sslConnection",
        "type": "boolean",
        "default": false,
        "optional": false
      },
      {
        "label": "Port",
        "name": "port",
        "type": "number",
        "placeholder": "6432",
        "optional": true
      },
      {
        "label": "Table Name",
        "name": "tableName",
        "type": "string",
        "placeholder": "documents",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Additional Configuration",
        "name": "additionalConfig",
        "type": "json",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Postgres Retriever",
        "name": "retriever",
        "baseClasses": ["Postgres", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Postgres Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Postgres", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Postgres/Postgres_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Qdrant",
    "name": "qdrant",
    "version": 1,
    "type": "Qdrant",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Qdrant/qdrant.png",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using Qdrant, a scalable open source vector database written in Rust",
    "baseClasses": ["Qdrant", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed when using Qdrant cloud hosted",
      "optional": true,
      "credentialNames": ["qdrantApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Qdrant Server URL",
        "name": "qdrantServerUrl",
        "type": "string",
        "placeholder": "http://localhost:6333"
      },
      {
        "label": "Qdrant Collection Name",
        "name": "qdrantCollection",
        "type": "string"
      },
      {
        "label": "Vector Dimension",
        "name": "qdrantVectorDimension",
        "type": "number",
        "default": 1536,
        "additionalParams": true
      },
      {
        "label": "Similarity",
        "name": "qdrantSimilarity",
        "description": "Similarity measure used in Qdrant.",
        "type": "options",
        "default": "Cosine",
        "options": [
          { "label": "Cosine", "name": "Cosine" },
          { "label": "Euclid", "name": "Euclid" },
          { "label": "Dot", "name": "Dot" }
        ],
        "additionalParams": true
      },
      {
        "label": "Additional Collection Cofiguration",
        "name": "qdrantCollectionConfiguration",
        "description": "Refer to <a target=\"_blank\" href=\"https://qdrant.tech/documentation/concepts/collections\">collection docs</a> for more reference",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Qdrant Search Filter",
        "name": "qdrantFilter",
        "description": "Only return points which satisfy the conditions",
        "type": "json",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Qdrant Retriever",
        "name": "retriever",
        "baseClasses": ["Qdrant", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Qdrant Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Qdrant", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Qdrant/Qdrant.js"
  },
  {
    "label": "Qdrant Load Existing Index",
    "name": "qdrantExistingIndex",
    "version": 2,
    "type": "Qdrant",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Qdrant/qdrant.png",
    "category": "Vector Stores",
    "description": "Load existing index from Qdrant (i.e., documents have been upserted)",
    "baseClasses": ["Qdrant", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed when using Qdrant cloud hosted",
      "optional": true,
      "credentialNames": ["qdrantApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Qdrant Server URL",
        "name": "qdrantServerUrl",
        "type": "string",
        "placeholder": "http://localhost:6333"
      },
      {
        "label": "Qdrant Collection Name",
        "name": "qdrantCollection",
        "type": "string"
      },
      {
        "label": "Vector Dimension",
        "name": "qdrantVectorDimension",
        "type": "number",
        "default": 1536,
        "additionalParams": true
      },
      {
        "label": "Similarity",
        "name": "qdrantSimilarity",
        "description": "Similarity measure used in Qdrant.",
        "type": "options",
        "default": "Cosine",
        "options": [
          { "label": "Cosine", "name": "Cosine" },
          { "label": "Euclid", "name": "Euclid" },
          { "label": "Dot", "name": "Dot" }
        ],
        "additionalParams": true
      },
      {
        "label": "Additional Collection Cofiguration",
        "name": "qdrantCollectionConfiguration",
        "description": "Refer to <a target=\"_blank\" href=\"https://qdrant.tech/documentation/concepts/collections\">collection docs</a> for more reference",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Qdrant Search Filter",
        "name": "qdrantFilter",
        "description": "Only return points which satisfy the conditions",
        "type": "json",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Qdrant Retriever",
        "name": "retriever",
        "baseClasses": ["Qdrant", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Qdrant Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Qdrant", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Qdrant/Qdrant_Existing.js"
  },
  {
    "label": "Qdrant Upsert Document",
    "name": "qdrantUpsert",
    "version": 2,
    "type": "Qdrant",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Qdrant/qdrant.png",
    "category": "Vector Stores",
    "description": "Upsert documents to Qdrant",
    "baseClasses": ["Qdrant", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed when using Qdrant cloud hosted",
      "optional": true,
      "credentialNames": ["qdrantApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Qdrant Server URL",
        "name": "qdrantServerUrl",
        "type": "string",
        "placeholder": "http://localhost:6333"
      },
      {
        "label": "Qdrant Collection Name",
        "name": "qdrantCollection",
        "type": "string"
      },
      {
        "label": "Vector Dimension",
        "name": "qdrantVectorDimension",
        "type": "number",
        "default": 1536,
        "additionalParams": true
      },
      {
        "label": "Similarity",
        "name": "qdrantSimilarity",
        "description": "Similarity measure used in Qdrant.",
        "type": "options",
        "default": "Cosine",
        "options": [
          { "label": "Cosine", "name": "Cosine" },
          { "label": "Euclid", "name": "Euclid" },
          { "label": "Dot", "name": "Dot" }
        ],
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Qdrant Search Filter",
        "name": "qdrantFilter",
        "description": "Only return points which satisfy the conditions",
        "type": "json",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Qdrant Retriever",
        "name": "retriever",
        "baseClasses": ["Qdrant", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Qdrant Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Qdrant", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Qdrant/Qdrant_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Redis",
    "name": "redis",
    "version": 1,
    "description": "Upsert embedded data and perform similarity search upon query using Redis, an open source, in-memory data structure store",
    "type": "Redis",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Redis/redis.svg",
    "category": "Vector Stores",
    "baseClasses": ["Redis", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["redisCacheUrlApi", "redisCacheApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Index Name",
        "name": "indexName",
        "placeholder": "<VECTOR_INDEX_NAME>",
        "type": "string"
      },
      {
        "label": "Replace Index on Upsert",
        "name": "replaceIndex",
        "description": "Selecting this option will delete the existing index and recreate a new one when upserting",
        "default": false,
        "type": "boolean"
      },
      {
        "label": "Content Field",
        "name": "contentKey",
        "description": "Name of the field (column) that contains the actual content",
        "type": "string",
        "default": "content",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Metadata Field",
        "name": "metadataKey",
        "description": "Name of the field (column) that contains the metadata of the document",
        "type": "string",
        "default": "metadata",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Vector Field",
        "name": "vectorKey",
        "description": "Name of the field (column) that contains the vector",
        "type": "string",
        "default": "content_vector",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Redis Retriever",
        "name": "retriever",
        "baseClasses": ["Redis", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Redis Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Redis", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Redis/Redis.js"
  },
  {
    "type": "Redis",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Redis/redis.svg",
    "category": "Vector Stores",
    "baseClasses": ["Redis", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["redisCacheUrlApi", "redisCacheApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Index Name",
        "name": "indexName",
        "placeholder": "<VECTOR_INDEX_NAME>",
        "type": "string"
      },
      {
        "label": "Content Field",
        "name": "contentKey",
        "description": "Name of the field (column) that contains the actual content",
        "type": "string",
        "default": "content",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Metadata Field",
        "name": "metadataKey",
        "description": "Name of the field (column) that contains the metadata of the document",
        "type": "string",
        "default": "metadata",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Vector Field",
        "name": "vectorKey",
        "description": "Name of the field (column) that contains the vector",
        "type": "string",
        "default": "content_vector",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Redis Retriever",
        "name": "retriever",
        "baseClasses": ["Redis", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Redis Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Redis", "VectorStore"]
      }
    ],
    "label": "Redis Load Existing Index",
    "name": "RedisIndex",
    "version": 1,
    "description": "Load existing index from Redis (i.e: Document has been upserted)",
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Redis/Redis_Existing.js"
  },
  {
    "type": "Redis",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Redis/redis.svg",
    "category": "Vector Stores",
    "baseClasses": ["Redis", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["redisCacheUrlApi", "redisCacheApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Index Name",
        "name": "indexName",
        "placeholder": "<VECTOR_INDEX_NAME>",
        "type": "string"
      },
      {
        "label": "Replace Index?",
        "name": "replaceIndex",
        "description": "Selecting this option will delete the existing index and recreate a new one",
        "default": false,
        "type": "boolean"
      },
      {
        "label": "Content Field",
        "name": "contentKey",
        "description": "Name of the field (column) that contains the actual content",
        "type": "string",
        "default": "content",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Metadata Field",
        "name": "metadataKey",
        "description": "Name of the field (column) that contains the metadata of the document",
        "type": "string",
        "default": "metadata",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Vector Field",
        "name": "vectorKey",
        "description": "Name of the field (column) that contains the vector",
        "type": "string",
        "default": "content_vector",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Redis Retriever",
        "name": "retriever",
        "baseClasses": ["Redis", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Redis Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Redis", "VectorStore"]
      }
    ],
    "label": "Redis Upsert Document",
    "name": "RedisUpsert",
    "version": 1,
    "description": "Upsert documents to Redis",
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Redis/Redis_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "SingleStore",
    "name": "singlestore",
    "version": 1,
    "type": "SingleStore",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Singlestore/singlestore.svg",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using SingleStore, a fast and distributed cloud relational database",
    "baseClasses": ["SingleStore", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Needed when using SingleStore cloud hosted",
      "optional": true,
      "credentialNames": ["singleStoreApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      { "label": "Host", "name": "host", "type": "string" },
      { "label": "Database", "name": "database", "type": "string" },
      {
        "label": "Table Name",
        "name": "tableName",
        "type": "string",
        "placeholder": "embeddings",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Content Column Name",
        "name": "contentColumnName",
        "type": "string",
        "placeholder": "content",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Vector Column Name",
        "name": "vectorColumnName",
        "type": "string",
        "placeholder": "vector",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Metadata Column Name",
        "name": "metadataColumnName",
        "type": "string",
        "placeholder": "metadata",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "SingleStore Retriever",
        "name": "retriever",
        "baseClasses": ["SingleStore", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "SingleStore Vector Store",
        "name": "vectorStore",
        "baseClasses": ["SingleStore", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Singlestore/Singlestore.js"
  },
  {
    "label": "SingleStore Load Existing Table",
    "name": "singlestoreExisting",
    "version": 1,
    "type": "SingleStore",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Singlestore/singlestore.svg",
    "category": "Vector Stores",
    "description": "Load existing document from SingleStore",
    "baseClasses": ["SingleStore", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Needed when using SingleStore cloud hosted",
      "optional": true,
      "credentialNames": ["singleStoreApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      { "label": "Host", "name": "host", "type": "string" },
      { "label": "Database", "name": "database", "type": "string" },
      {
        "label": "Table Name",
        "name": "tableName",
        "type": "string",
        "placeholder": "embeddings",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Content Column Name",
        "name": "contentColumnName",
        "type": "string",
        "placeholder": "content",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Vector Column Name",
        "name": "vectorColumnName",
        "type": "string",
        "placeholder": "vector",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Metadata Column Name",
        "name": "metadataColumnName",
        "type": "string",
        "placeholder": "metadata",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "SingleStore Retriever",
        "name": "retriever",
        "baseClasses": ["SingleStore", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "SingleStore Vector Store",
        "name": "vectorStore",
        "baseClasses": ["SingleStore", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Singlestore/Singlestore_Existing.js"
  },
  {
    "label": "SingleStore Upsert Document",
    "name": "singlestoreUpsert",
    "version": 1,
    "type": "SingleStore",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Singlestore/singlestore.svg",
    "category": "Vector Stores",
    "description": "Upsert documents to SingleStore",
    "baseClasses": ["SingleStore", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Needed when using SingleStore cloud hosted",
      "optional": true,
      "credentialNames": ["singleStoreApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      { "label": "Host", "name": "host", "type": "string" },
      { "label": "Database", "name": "database", "type": "string" },
      {
        "label": "Table Name",
        "name": "tableName",
        "type": "string",
        "placeholder": "embeddings",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Content Column Name",
        "name": "contentColumnName",
        "type": "string",
        "placeholder": "content",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Vector Column Name",
        "name": "vectorColumnName",
        "type": "string",
        "placeholder": "vector",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Metadata Column Name",
        "name": "metadataColumnName",
        "type": "string",
        "placeholder": "metadata",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "SingleStore Retriever",
        "name": "retriever",
        "baseClasses": ["SingleStore", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "SingleStore Vector Store",
        "name": "vectorStore",
        "baseClasses": ["SingleStore", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Singlestore/Singlestore_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Supabase",
    "name": "supabase",
    "version": 1,
    "type": "Supabase",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Supabase/supabase.svg",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using Supabase via pgvector extension",
    "baseClasses": ["Supabase", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["supabaseApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Supabase Project URL",
        "name": "supabaseProjUrl",
        "type": "string"
      },
      { "label": "Table Name", "name": "tableName", "type": "string" },
      { "label": "Query Name", "name": "queryName", "type": "string" },
      {
        "label": "Supabase Metadata Filter",
        "name": "supabaseMetadataFilter",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Supabase Retriever",
        "name": "retriever",
        "baseClasses": ["Supabase", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Supabase Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Supabase", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Supabase/Supabase.js"
  },
  {
    "label": "Supabase Load Existing Index",
    "name": "supabaseExistingIndex",
    "version": 1,
    "type": "Supabase",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Supabase/supabase.svg",
    "category": "Vector Stores",
    "description": "Load existing index from Supabase (i.e: Document has been upserted)",
    "baseClasses": ["Supabase", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["supabaseApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Supabase Project URL",
        "name": "supabaseProjUrl",
        "type": "string"
      },
      { "label": "Table Name", "name": "tableName", "type": "string" },
      { "label": "Query Name", "name": "queryName", "type": "string" },
      {
        "label": "Supabase Metadata Filter",
        "name": "supabaseMetadataFilter",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Supabase Retriever",
        "name": "retriever",
        "baseClasses": ["Supabase", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Supabase Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Supabase", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Supabase/Supabase_Exisiting.js"
  },
  {
    "label": "Supabase Upsert Document",
    "name": "supabaseUpsert",
    "version": 1,
    "type": "Supabase",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Supabase/supabase.svg",
    "category": "Vector Stores",
    "description": "Upsert documents to Supabase",
    "baseClasses": ["Supabase", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["supabaseApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Supabase Project URL",
        "name": "supabaseProjUrl",
        "type": "string"
      },
      { "label": "Table Name", "name": "tableName", "type": "string" },
      { "label": "Query Name", "name": "queryName", "type": "string" },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Supabase Retriever",
        "name": "retriever",
        "baseClasses": ["Supabase", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Supabase Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Supabase", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Supabase/Supabase_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Vectara",
    "name": "vectara",
    "version": 1,
    "type": "Vectara",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Vectara/vectara.png",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using Vectara, a LLM-powered search-as-a-service",
    "baseClasses": ["Vectara", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["vectaraApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      {
        "label": "File",
        "name": "file",
        "description": "File to upload to Vectara. Supported file types: https://docs.vectara.com/docs/api-reference/indexing-apis/file-upload/file-upload-filetypes",
        "type": "file",
        "optional": true
      },
      {
        "label": "Metadata Filter",
        "name": "filter",
        "description": "Filter to apply to Vectara metadata. Refer to the <a target=\"_blank\" href=\"https://docs.flowiseai.com/vector-stores/vectara\">documentation</a> on how to use Vectara filters with Flowise.",
        "type": "string",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Sentences Before",
        "name": "sentencesBefore",
        "description": "Number of sentences to fetch before the matched sentence. Defaults to 2.",
        "type": "number",
        "default": 2,
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Sentences After",
        "name": "sentencesAfter",
        "description": "Number of sentences to fetch after the matched sentence. Defaults to 2.",
        "type": "number",
        "default": 2,
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Lambda",
        "name": "lambda",
        "description": "Improves retrieval accuracy by adjusting the balance (from 0 to 1) between neural search and keyword-based search factors.",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Defaults to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Vectara Retriever",
        "name": "retriever",
        "baseClasses": ["Vectara", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Vectara Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Vectara", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Vectara/Vectara.js"
  },
  {
    "label": "Vectara Load Existing Index",
    "name": "vectaraExistingIndex",
    "version": 1,
    "type": "Vectara",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Vectara/vectara.png",
    "category": "Vector Stores",
    "description": "Load existing index from Vectara (i.e: Document has been upserted)",
    "baseClasses": ["Vectara", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["vectaraApi"]
    },
    "inputs": [
      {
        "label": "Metadata Filter",
        "name": "filter",
        "description": "Filter to apply to Vectara metadata. Refer to the <a target=\"_blank\" href=\"https://docs.flowiseai.com/vector-stores/vectara\">documentation</a> on how to use Vectara filters with Flowise.",
        "type": "string",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Sentences Before",
        "name": "sentencesBefore",
        "description": "Number of sentences to fetch before the matched sentence. Defaults to 2.",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Sentences After",
        "name": "sentencesAfter",
        "description": "Number of sentences to fetch after the matched sentence. Defaults to 2.",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Lambda",
        "name": "lambda",
        "description": "Improves retrieval accuracy by adjusting the balance (from 0 to 1) between neural search and keyword-based search factors.",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Defaults to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Vectara Retriever",
        "name": "retriever",
        "baseClasses": ["Vectara", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Vectara Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Vectara", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Vectara/Vectara_Existing.js"
  },
  {
    "label": "Vectara Upload File",
    "name": "vectaraUpload",
    "version": 1,
    "type": "Vectara",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Vectara/vectara.png",
    "category": "Vector Stores",
    "description": "Upload files to Vectara",
    "baseClasses": ["Vectara", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["vectaraApi"]
    },
    "inputs": [
      {
        "label": "File",
        "name": "file",
        "description": "File to upload to Vectara. Supported file types: https://docs.vectara.com/docs/api-reference/indexing-apis/file-upload/file-upload-filetypes",
        "type": "file"
      },
      {
        "label": "Metadata Filter",
        "name": "filter",
        "description": "Filter to apply to Vectara metadata. Refer to the <a target=\"_blank\" href=\"https://docs.flowiseai.com/vector-stores/vectara\">documentation</a> on how to use Vectara filters with Flowise.",
        "type": "string",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Sentences Before",
        "name": "sentencesBefore",
        "description": "Number of sentences to fetch before the matched sentence. Defaults to 2.",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Sentences After",
        "name": "sentencesAfter",
        "description": "Number of sentences to fetch after the matched sentence. Defaults to 2.",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Lambda",
        "name": "lambda",
        "description": "Improves retrieval accuracy by adjusting the balance (from 0 to 1) between neural search and keyword-based search factors.",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Defaults to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Vectara Retriever",
        "name": "retriever",
        "baseClasses": ["Vectara", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Vectara Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Vectara", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Vectara/Vectara_Upload.js"
  },
  {
    "label": "Vectara Upsert Document",
    "name": "vectaraUpsert",
    "version": 1,
    "type": "Vectara",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Vectara/vectara.png",
    "category": "Vector Stores",
    "description": "Upsert documents to Vectara",
    "baseClasses": ["Vectara", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "credentialNames": ["vectaraApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      {
        "label": "Metadata Filter",
        "name": "filter",
        "description": "Filter to apply to Vectara metadata. Refer to the <a target=\"_blank\" href=\"https://docs.flowiseai.com/vector-stores/vectara\">documentation</a> on how to use Vectara filters with Flowise.",
        "type": "string",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Sentences Before",
        "name": "sentencesBefore",
        "description": "Number of sentences to fetch before the matched sentence. Defaults to 2.",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Sentences After",
        "name": "sentencesAfter",
        "description": "Number of sentences to fetch after the matched sentence. Defaults to 2.",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Lambda",
        "name": "lambda",
        "description": "Improves retrieval accuracy by adjusting the balance (from 0 to 1) between neural search and keyword-based search factors.",
        "type": "number",
        "additionalParams": true,
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Defaults to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Vectara Retriever",
        "name": "retriever",
        "baseClasses": ["Vectara", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Vectara Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Vectara", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Vectara/Vectara_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Weaviate",
    "name": "weaviate",
    "version": 1,
    "type": "Weaviate",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Weaviate/weaviate.png",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using Weaviate, a scalable open-source vector database",
    "baseClasses": ["Weaviate", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed when using Weaviate cloud hosted",
      "optional": true,
      "credentialNames": ["weaviateApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Weaviate Scheme",
        "name": "weaviateScheme",
        "type": "options",
        "default": "https",
        "options": [
          { "label": "https", "name": "https" },
          { "label": "http", "name": "http" }
        ]
      },
      {
        "label": "Weaviate Host",
        "name": "weaviateHost",
        "type": "string",
        "placeholder": "localhost:8080"
      },
      {
        "label": "Weaviate Index",
        "name": "weaviateIndex",
        "type": "string",
        "placeholder": "Test"
      },
      {
        "label": "Weaviate Text Key",
        "name": "weaviateTextKey",
        "type": "string",
        "placeholder": "text",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Weaviate Metadata Keys",
        "name": "weaviateMetadataKeys",
        "type": "string",
        "rows": 4,
        "placeholder": "[\"foo\"]",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Weaviate Retriever",
        "name": "retriever",
        "baseClasses": ["Weaviate", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Weaviate Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Weaviate", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Weaviate/Weaviate.js"
  },
  {
    "label": "Weaviate Load Existing Index",
    "name": "weaviateExistingIndex",
    "version": 1,
    "type": "Weaviate",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Weaviate/weaviate.png",
    "category": "Vector Stores",
    "description": "Load existing index from Weaviate (i.e: Document has been upserted)",
    "baseClasses": ["Weaviate", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed when using Weaviate cloud hosted",
      "optional": true,
      "credentialNames": ["weaviateApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Weaviate Scheme",
        "name": "weaviateScheme",
        "type": "options",
        "default": "https",
        "options": [
          { "label": "https", "name": "https" },
          { "label": "http", "name": "http" }
        ]
      },
      {
        "label": "Weaviate Host",
        "name": "weaviateHost",
        "type": "string",
        "placeholder": "localhost:8080"
      },
      {
        "label": "Weaviate Index",
        "name": "weaviateIndex",
        "type": "string",
        "placeholder": "Test"
      },
      {
        "label": "Weaviate Text Key",
        "name": "weaviateTextKey",
        "type": "string",
        "placeholder": "text",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Weaviate Metadata Keys",
        "name": "weaviateMetadataKeys",
        "type": "string",
        "rows": 4,
        "placeholder": "[\"foo\"]",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Weaviate Retriever",
        "name": "retriever",
        "baseClasses": ["Weaviate", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Weaviate Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Weaviate", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Weaviate/Weaviate_Existing.js"
  },
  {
    "label": "Weaviate Upsert Document",
    "name": "weaviateUpsert",
    "version": 1,
    "type": "Weaviate",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Weaviate/weaviate.png",
    "category": "Vector Stores",
    "description": "Upsert documents to Weaviate",
    "baseClasses": ["Weaviate", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "description": "Only needed when using Weaviate cloud hosted",
      "optional": true,
      "credentialNames": ["weaviateApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Weaviate Scheme",
        "name": "weaviateScheme",
        "type": "options",
        "default": "https",
        "options": [
          { "label": "https", "name": "https" },
          { "label": "http", "name": "http" }
        ]
      },
      {
        "label": "Weaviate Host",
        "name": "weaviateHost",
        "type": "string",
        "placeholder": "localhost:8080"
      },
      {
        "label": "Weaviate Index",
        "name": "weaviateIndex",
        "type": "string",
        "placeholder": "Test"
      },
      {
        "label": "Weaviate Text Key",
        "name": "weaviateTextKey",
        "type": "string",
        "placeholder": "text",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Weaviate Metadata Keys",
        "name": "weaviateMetadataKeys",
        "type": "string",
        "rows": 4,
        "placeholder": "[\"foo\"]",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Weaviate Retriever",
        "name": "retriever",
        "baseClasses": ["Weaviate", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Weaviate Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Weaviate", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Weaviate/Weaviate_Upsert.js"
  },
  {
    "vectorStoreMethods": {},
    "label": "Zep",
    "name": "zep",
    "version": 1,
    "type": "Zep",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Zep/zep.svg",
    "category": "Vector Stores",
    "description": "Upsert embedded data and perform similarity search upon query using Zep, a fast and scalable building block for LLM apps",
    "baseClasses": ["Zep", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "NEW",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "description": "Configure JWT authentication on your Zep instance (Optional)",
      "credentialNames": ["zepMemoryApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true,
        "optional": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Base URL",
        "name": "baseURL",
        "type": "string",
        "default": "http://127.0.0.1:8000"
      },
      {
        "label": "Zep Collection",
        "name": "zepCollection",
        "type": "string",
        "placeholder": "my-first-collection"
      },
      {
        "label": "Zep Metadata Filter",
        "name": "zepMetadataFilter",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Embedding Dimension",
        "name": "dimension",
        "type": "number",
        "default": 1536,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Zep Retriever",
        "name": "retriever",
        "baseClasses": ["Zep", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Zep Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Zep", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Zep/Zep.js"
  },
  {
    "label": "Zep Load Existing Index",
    "name": "zepExistingIndex",
    "version": 1,
    "type": "Zep",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Zep/zep.svg",
    "category": "Vector Stores",
    "description": "Load existing index from Zep (i.e: Document has been upserted)",
    "baseClasses": ["Zep", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "description": "Configure JWT authentication on your Zep instance (Optional)",
      "credentialNames": ["zepMemoryApi"]
    },
    "inputs": [
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Base URL",
        "name": "baseURL",
        "type": "string",
        "default": "http://127.0.0.1:8000"
      },
      {
        "label": "Zep Collection",
        "name": "zepCollection",
        "type": "string",
        "placeholder": "my-first-collection"
      },
      {
        "label": "Zep Metadata Filter",
        "name": "zepMetadataFilter",
        "type": "json",
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Embedding Dimension",
        "name": "dimension",
        "type": "number",
        "default": 1536,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Zep Retriever",
        "name": "retriever",
        "baseClasses": ["Zep", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Zep Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Zep", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Zep/Zep_Existing.js"
  },
  {
    "label": "Zep Upsert Document",
    "name": "zepUpsert",
    "version": 1,
    "type": "Zep",
    "icon": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Zep/zep.svg",
    "category": "Vector Stores",
    "description": "Upsert documents to Zep",
    "baseClasses": ["Zep", "VectorStoreRetriever", "BaseRetriever"],
    "badge": "DEPRECATING",
    "credential": {
      "label": "Connect Credential",
      "name": "credential",
      "type": "credential",
      "optional": true,
      "description": "Configure JWT authentication on your Zep instance (Optional)",
      "credentialNames": ["zepMemoryApi"]
    },
    "inputs": [
      {
        "label": "Document",
        "name": "document",
        "type": "Document",
        "list": true
      },
      { "label": "Embeddings", "name": "embeddings", "type": "Embeddings" },
      {
        "label": "Base URL",
        "name": "baseURL",
        "type": "string",
        "default": "http://127.0.0.1:8000"
      },
      {
        "label": "Zep Collection",
        "name": "zepCollection",
        "type": "string",
        "placeholder": "my-first-collection"
      },
      {
        "label": "Embedding Dimension",
        "name": "dimension",
        "type": "number",
        "default": 1536,
        "additionalParams": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "description": "Number of top results to fetch. Default to 4",
        "placeholder": "4",
        "type": "number",
        "additionalParams": true,
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Zep Retriever",
        "name": "retriever",
        "baseClasses": ["Zep", "VectorStoreRetriever", "BaseRetriever"]
      },
      {
        "label": "Zep Vector Store",
        "name": "vectorStore",
        "baseClasses": ["Zep", "VectorStore"]
      }
    ],
    "filePath": "/home/haochenz/Flowise/node_modules/flowise-components/dist/nodes/vectorstores/Zep/Zep_Upsert.js"
  }
]
